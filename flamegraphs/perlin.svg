<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2166" onload="init(evt)" viewBox="0 0 1200 2166" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2166" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="2149.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="2149.00"> </text><svg id="frames" x="10" width="1180"><g><title>[anon] (1 samples, 0.87%)</title><rect x="0.0000%" y="2085" width="0.8696%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="2095.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (1 samples, 0.87%)</title><rect x="0.0000%" y="2069" width="0.8696%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="2079.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.87%)</title><rect x="0.8696%" y="1749" width="0.8696%" height="15" fill="rgb(221,193,54)"/><text x="1.1196%" y="1759.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1 samples, 0.87%)</title><rect x="0.8696%" y="1733" width="0.8696%" height="15" fill="rgb(248,212,6)"/><text x="1.1196%" y="1743.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="0.8696%" y="1717" width="0.8696%" height="15" fill="rgb(208,68,35)"/><text x="1.1196%" y="1727.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="0.8696%" y="1701" width="0.8696%" height="15" fill="rgb(232,128,0)"/><text x="1.1196%" y="1711.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="0.8696%" y="1685" width="0.8696%" height="15" fill="rgb(207,160,47)"/><text x="1.1196%" y="1695.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="0.8696%" y="1669" width="0.8696%" height="15" fill="rgb(228,23,34)"/><text x="1.1196%" y="1679.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="0.8696%" y="1653" width="0.8696%" height="15" fill="rgb(218,30,26)"/><text x="1.1196%" y="1663.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.87%)</title><rect x="0.8696%" y="1637" width="0.8696%" height="15" fill="rgb(220,122,19)"/><text x="1.1196%" y="1647.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1 samples, 0.87%)</title><rect x="0.8696%" y="1621" width="0.8696%" height="15" fill="rgb(250,228,42)"/><text x="1.1196%" y="1631.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="0.8696%" y="1605" width="0.8696%" height="15" fill="rgb(240,193,28)"/><text x="1.1196%" y="1615.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="0.8696%" y="1589" width="0.8696%" height="15" fill="rgb(216,20,37)"/><text x="1.1196%" y="1599.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="0.8696%" y="1573" width="0.8696%" height="15" fill="rgb(206,188,39)"/><text x="1.1196%" y="1583.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="0.8696%" y="1557" width="0.8696%" height="15" fill="rgb(217,207,13)"/><text x="1.1196%" y="1567.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="0.8696%" y="1541" width="0.8696%" height="15" fill="rgb(231,73,38)"/><text x="1.1196%" y="1551.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.87%)</title><rect x="0.8696%" y="1525" width="0.8696%" height="15" fill="rgb(225,20,46)"/><text x="1.1196%" y="1535.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1 samples, 0.87%)</title><rect x="0.8696%" y="1509" width="0.8696%" height="15" fill="rgb(210,31,41)"/><text x="1.1196%" y="1519.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="0.8696%" y="1493" width="0.8696%" height="15" fill="rgb(221,200,47)"/><text x="1.1196%" y="1503.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="0.8696%" y="1477" width="0.8696%" height="15" fill="rgb(226,26,5)"/><text x="1.1196%" y="1487.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="0.8696%" y="1461" width="0.8696%" height="15" fill="rgb(249,33,26)"/><text x="1.1196%" y="1471.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="0.8696%" y="1445" width="0.8696%" height="15" fill="rgb(235,183,28)"/><text x="1.1196%" y="1455.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="0.8696%" y="1429" width="0.8696%" height="15" fill="rgb(221,5,38)"/><text x="1.1196%" y="1439.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.87%)</title><rect x="0.8696%" y="1413" width="0.8696%" height="15" fill="rgb(247,18,42)"/><text x="1.1196%" y="1423.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1 samples, 0.87%)</title><rect x="0.8696%" y="1397" width="0.8696%" height="15" fill="rgb(241,131,45)"/><text x="1.1196%" y="1407.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="0.8696%" y="1381" width="0.8696%" height="15" fill="rgb(249,31,29)"/><text x="1.1196%" y="1391.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="0.8696%" y="1365" width="0.8696%" height="15" fill="rgb(225,111,53)"/><text x="1.1196%" y="1375.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="0.8696%" y="1349" width="0.8696%" height="15" fill="rgb(238,160,17)"/><text x="1.1196%" y="1359.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="0.8696%" y="1333" width="0.8696%" height="15" fill="rgb(214,148,48)"/><text x="1.1196%" y="1343.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="0.8696%" y="1317" width="0.8696%" height="15" fill="rgb(232,36,49)"/><text x="1.1196%" y="1327.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.87%)</title><rect x="0.8696%" y="1301" width="0.8696%" height="15" fill="rgb(209,103,24)"/><text x="1.1196%" y="1311.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.87%)</title><rect x="0.8696%" y="1285" width="0.8696%" height="15" fill="rgb(229,88,8)"/><text x="1.1196%" y="1295.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1 samples, 0.87%)</title><rect x="0.8696%" y="1269" width="0.8696%" height="15" fill="rgb(213,181,19)"/><text x="1.1196%" y="1279.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.87%)</title><rect x="0.8696%" y="1253" width="0.8696%" height="15" fill="rgb(254,191,54)"/><text x="1.1196%" y="1263.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1 samples, 0.87%)</title><rect x="0.8696%" y="1237" width="0.8696%" height="15" fill="rgb(241,83,37)"/><text x="1.1196%" y="1247.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.87%)</title><rect x="0.8696%" y="1221" width="0.8696%" height="15" fill="rgb(233,36,39)"/><text x="1.1196%" y="1231.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.87%)</title><rect x="0.8696%" y="1205" width="0.8696%" height="15" fill="rgb(226,3,54)"/><text x="1.1196%" y="1215.50"></text></g><g><title>std::panicking::try (1 samples, 0.87%)</title><rect x="0.8696%" y="1189" width="0.8696%" height="15" fill="rgb(245,192,40)"/><text x="1.1196%" y="1199.50"></text></g><g><title>__rust_maybe_catch_panic (1 samples, 0.87%)</title><rect x="0.8696%" y="1173" width="0.8696%" height="15" fill="rgb(238,167,29)"/><text x="1.1196%" y="1183.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.87%)</title><rect x="0.8696%" y="1157" width="0.8696%" height="15" fill="rgb(232,182,51)"/><text x="1.1196%" y="1167.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (1 samples, 0.87%)</title><rect x="0.8696%" y="1141" width="0.8696%" height="15" fill="rgb(231,60,39)"/><text x="1.1196%" y="1151.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::_{{closure}} (1 samples, 0.87%)</title><rect x="0.8696%" y="1125" width="0.8696%" height="15" fill="rgb(208,69,12)"/><text x="1.1196%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1 samples, 0.87%)</title><rect x="0.8696%" y="1109" width="0.8696%" height="15" fill="rgb(235,93,37)"/><text x="1.1196%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="0.8696%" y="1093" width="0.8696%" height="15" fill="rgb(213,116,39)"/><text x="1.1196%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="0.8696%" y="1077" width="0.8696%" height="15" fill="rgb(222,207,29)"/><text x="1.1196%" y="1087.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="0.8696%" y="1061" width="0.8696%" height="15" fill="rgb(206,96,30)"/><text x="1.1196%" y="1071.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="0.8696%" y="1045" width="0.8696%" height="15" fill="rgb(218,138,4)"/><text x="1.1196%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="0.8696%" y="1029" width="0.8696%" height="15" fill="rgb(250,191,14)"/><text x="1.1196%" y="1039.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.87%)</title><rect x="0.8696%" y="1013" width="0.8696%" height="15" fill="rgb(239,60,40)"/><text x="1.1196%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1 samples, 0.87%)</title><rect x="0.8696%" y="997" width="0.8696%" height="15" fill="rgb(206,27,48)"/><text x="1.1196%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="0.8696%" y="981" width="0.8696%" height="15" fill="rgb(225,35,8)"/><text x="1.1196%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="0.8696%" y="965" width="0.8696%" height="15" fill="rgb(250,213,24)"/><text x="1.1196%" y="975.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="0.8696%" y="949" width="0.8696%" height="15" fill="rgb(247,123,22)"/><text x="1.1196%" y="959.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="0.8696%" y="933" width="0.8696%" height="15" fill="rgb(231,138,38)"/><text x="1.1196%" y="943.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="0.8696%" y="917" width="0.8696%" height="15" fill="rgb(231,145,46)"/><text x="1.1196%" y="927.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.87%)</title><rect x="0.8696%" y="901" width="0.8696%" height="15" fill="rgb(251,118,11)"/><text x="1.1196%" y="911.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.87%)</title><rect x="0.8696%" y="885" width="0.8696%" height="15" fill="rgb(217,147,25)"/><text x="1.1196%" y="895.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1 samples, 0.87%)</title><rect x="0.8696%" y="869" width="0.8696%" height="15" fill="rgb(247,81,37)"/><text x="1.1196%" y="879.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.87%)</title><rect x="0.8696%" y="853" width="0.8696%" height="15" fill="rgb(209,12,38)"/><text x="1.1196%" y="863.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1 samples, 0.87%)</title><rect x="0.8696%" y="837" width="0.8696%" height="15" fill="rgb(227,1,9)"/><text x="1.1196%" y="847.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.87%)</title><rect x="0.8696%" y="821" width="0.8696%" height="15" fill="rgb(248,47,43)"/><text x="1.1196%" y="831.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.87%)</title><rect x="0.8696%" y="805" width="0.8696%" height="15" fill="rgb(221,10,30)"/><text x="1.1196%" y="815.50"></text></g><g><title>std::panicking::try (1 samples, 0.87%)</title><rect x="0.8696%" y="789" width="0.8696%" height="15" fill="rgb(210,229,1)"/><text x="1.1196%" y="799.50"></text></g><g><title>__rust_maybe_catch_panic (1 samples, 0.87%)</title><rect x="0.8696%" y="773" width="0.8696%" height="15" fill="rgb(222,148,37)"/><text x="1.1196%" y="783.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.87%)</title><rect x="0.8696%" y="757" width="0.8696%" height="15" fill="rgb(234,67,33)"/><text x="1.1196%" y="767.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (1 samples, 0.87%)</title><rect x="0.8696%" y="741" width="0.8696%" height="15" fill="rgb(247,98,35)"/><text x="1.1196%" y="751.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::_{{closure}} (1 samples, 0.87%)</title><rect x="0.8696%" y="725" width="0.8696%" height="15" fill="rgb(247,138,52)"/><text x="1.1196%" y="735.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1 samples, 0.87%)</title><rect x="0.8696%" y="709" width="0.8696%" height="15" fill="rgb(213,79,30)"/><text x="1.1196%" y="719.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="0.8696%" y="693" width="0.8696%" height="15" fill="rgb(246,177,23)"/><text x="1.1196%" y="703.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="0.8696%" y="677" width="0.8696%" height="15" fill="rgb(230,62,27)"/><text x="1.1196%" y="687.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="0.8696%" y="661" width="0.8696%" height="15" fill="rgb(216,154,8)"/><text x="1.1196%" y="671.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="0.8696%" y="645" width="0.8696%" height="15" fill="rgb(244,35,45)"/><text x="1.1196%" y="655.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="0.8696%" y="629" width="0.8696%" height="15" fill="rgb(251,115,12)"/><text x="1.1196%" y="639.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.87%)</title><rect x="0.8696%" y="613" width="0.8696%" height="15" fill="rgb(240,54,50)"/><text x="1.1196%" y="623.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.87%)</title><rect x="0.8696%" y="597" width="0.8696%" height="15" fill="rgb(233,84,52)"/><text x="1.1196%" y="607.50"></text></g><g><title>std::panicking::try (1 samples, 0.87%)</title><rect x="0.8696%" y="581" width="0.8696%" height="15" fill="rgb(207,117,47)"/><text x="1.1196%" y="591.50"></text></g><g><title>__rust_maybe_catch_panic (1 samples, 0.87%)</title><rect x="0.8696%" y="565" width="0.8696%" height="15" fill="rgb(249,43,39)"/><text x="1.1196%" y="575.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.87%)</title><rect x="0.8696%" y="549" width="0.8696%" height="15" fill="rgb(209,38,44)"/><text x="1.1196%" y="559.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (1 samples, 0.87%)</title><rect x="0.8696%" y="533" width="0.8696%" height="15" fill="rgb(236,212,23)"/><text x="1.1196%" y="543.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (1 samples, 0.87%)</title><rect x="0.8696%" y="517" width="0.8696%" height="15" fill="rgb(242,79,21)"/><text x="1.1196%" y="527.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="0.8696%" y="501" width="0.8696%" height="15" fill="rgb(211,96,35)"/><text x="1.1196%" y="511.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="0.8696%" y="485" width="0.8696%" height="15" fill="rgb(253,215,40)"/><text x="1.1196%" y="495.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="0.8696%" y="469" width="0.8696%" height="15" fill="rgb(211,81,21)"/><text x="1.1196%" y="479.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="0.8696%" y="453" width="0.8696%" height="15" fill="rgb(208,190,38)"/><text x="1.1196%" y="463.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.87%)</title><rect x="0.8696%" y="437" width="0.8696%" height="15" fill="rgb(235,213,38)"/><text x="1.1196%" y="447.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (2 samples, 1.74%)</title><rect x="0.8696%" y="2037" width="1.7391%" height="15" fill="rgb(237,122,38)"/><text x="1.1196%" y="2047.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (2 samples, 1.74%)</title><rect x="0.8696%" y="2021" width="1.7391%" height="15" fill="rgb(244,218,35)"/><text x="1.1196%" y="2031.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (2 samples, 1.74%)</title><rect x="0.8696%" y="2005" width="1.7391%" height="15" fill="rgb(240,68,47)"/><text x="1.1196%" y="2015.50"></text></g><g><title>rayon_core::job::JobRef::execute (2 samples, 1.74%)</title><rect x="0.8696%" y="1989" width="1.7391%" height="15" fill="rgb(210,16,53)"/><text x="1.1196%" y="1999.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (2 samples, 1.74%)</title><rect x="0.8696%" y="1973" width="1.7391%" height="15" fill="rgb(235,124,12)"/><text x="1.1196%" y="1983.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 1.74%)</title><rect x="0.8696%" y="1957" width="1.7391%" height="15" fill="rgb(224,169,11)"/><text x="1.1196%" y="1967.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 1.74%)</title><rect x="0.8696%" y="1941" width="1.7391%" height="15" fill="rgb(250,166,2)"/><text x="1.1196%" y="1951.50"></text></g><g><title>std::panicking::try (2 samples, 1.74%)</title><rect x="0.8696%" y="1925" width="1.7391%" height="15" fill="rgb(242,216,29)"/><text x="1.1196%" y="1935.50"></text></g><g><title>__rust_maybe_catch_panic (2 samples, 1.74%)</title><rect x="0.8696%" y="1909" width="1.7391%" height="15" fill="rgb(230,116,27)"/><text x="1.1196%" y="1919.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 1.74%)</title><rect x="0.8696%" y="1893" width="1.7391%" height="15" fill="rgb(228,99,48)"/><text x="1.1196%" y="1903.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (2 samples, 1.74%)</title><rect x="0.8696%" y="1877" width="1.7391%" height="15" fill="rgb(253,11,6)"/><text x="1.1196%" y="1887.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::_{{closure}} (2 samples, 1.74%)</title><rect x="0.8696%" y="1861" width="1.7391%" height="15" fill="rgb(247,143,39)"/><text x="1.1196%" y="1871.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (2 samples, 1.74%)</title><rect x="0.8696%" y="1845" width="1.7391%" height="15" fill="rgb(236,97,10)"/><text x="1.1196%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 1.74%)</title><rect x="0.8696%" y="1829" width="1.7391%" height="15" fill="rgb(233,208,19)"/><text x="1.1196%" y="1839.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 1.74%)</title><rect x="0.8696%" y="1813" width="1.7391%" height="15" fill="rgb(216,164,2)"/><text x="1.1196%" y="1823.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 1.74%)</title><rect x="0.8696%" y="1797" width="1.7391%" height="15" fill="rgb(220,129,5)"/><text x="1.1196%" y="1807.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 1.74%)</title><rect x="0.8696%" y="1781" width="1.7391%" height="15" fill="rgb(242,17,10)"/><text x="1.1196%" y="1791.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (2 samples, 1.74%)</title><rect x="0.8696%" y="1765" width="1.7391%" height="15" fill="rgb(242,107,0)"/><text x="1.1196%" y="1775.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.87%)</title><rect x="1.7391%" y="1749" width="0.8696%" height="15" fill="rgb(251,28,31)"/><text x="1.9891%" y="1759.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.87%)</title><rect x="1.7391%" y="1733" width="0.8696%" height="15" fill="rgb(233,223,10)"/><text x="1.9891%" y="1743.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1 samples, 0.87%)</title><rect x="1.7391%" y="1717" width="0.8696%" height="15" fill="rgb(215,21,27)"/><text x="1.9891%" y="1727.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.87%)</title><rect x="1.7391%" y="1701" width="0.8696%" height="15" fill="rgb(232,23,21)"/><text x="1.9891%" y="1711.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1 samples, 0.87%)</title><rect x="1.7391%" y="1685" width="0.8696%" height="15" fill="rgb(244,5,23)"/><text x="1.9891%" y="1695.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.87%)</title><rect x="1.7391%" y="1669" width="0.8696%" height="15" fill="rgb(226,81,46)"/><text x="1.9891%" y="1679.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.87%)</title><rect x="1.7391%" y="1653" width="0.8696%" height="15" fill="rgb(247,70,30)"/><text x="1.9891%" y="1663.50"></text></g><g><title>std::panicking::try (1 samples, 0.87%)</title><rect x="1.7391%" y="1637" width="0.8696%" height="15" fill="rgb(212,68,19)"/><text x="1.9891%" y="1647.50"></text></g><g><title>__rust_maybe_catch_panic (1 samples, 0.87%)</title><rect x="1.7391%" y="1621" width="0.8696%" height="15" fill="rgb(240,187,13)"/><text x="1.9891%" y="1631.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.87%)</title><rect x="1.7391%" y="1605" width="0.8696%" height="15" fill="rgb(223,113,26)"/><text x="1.9891%" y="1615.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (1 samples, 0.87%)</title><rect x="1.7391%" y="1589" width="0.8696%" height="15" fill="rgb(206,192,2)"/><text x="1.9891%" y="1599.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::_{{closure}} (1 samples, 0.87%)</title><rect x="1.7391%" y="1573" width="0.8696%" height="15" fill="rgb(241,108,4)"/><text x="1.9891%" y="1583.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1 samples, 0.87%)</title><rect x="1.7391%" y="1557" width="0.8696%" height="15" fill="rgb(247,173,49)"/><text x="1.9891%" y="1567.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="1.7391%" y="1541" width="0.8696%" height="15" fill="rgb(224,114,35)"/><text x="1.9891%" y="1551.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="1.7391%" y="1525" width="0.8696%" height="15" fill="rgb(245,159,27)"/><text x="1.9891%" y="1535.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="1.7391%" y="1509" width="0.8696%" height="15" fill="rgb(245,172,44)"/><text x="1.9891%" y="1519.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="1.7391%" y="1493" width="0.8696%" height="15" fill="rgb(236,23,11)"/><text x="1.9891%" y="1503.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="1.7391%" y="1477" width="0.8696%" height="15" fill="rgb(205,117,38)"/><text x="1.9891%" y="1487.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.87%)</title><rect x="1.7391%" y="1461" width="0.8696%" height="15" fill="rgb(237,72,25)"/><text x="1.9891%" y="1471.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.87%)</title><rect x="1.7391%" y="1445" width="0.8696%" height="15" fill="rgb(244,70,9)"/><text x="1.9891%" y="1455.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1 samples, 0.87%)</title><rect x="1.7391%" y="1429" width="0.8696%" height="15" fill="rgb(217,125,39)"/><text x="1.9891%" y="1439.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.87%)</title><rect x="1.7391%" y="1413" width="0.8696%" height="15" fill="rgb(235,36,10)"/><text x="1.9891%" y="1423.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1 samples, 0.87%)</title><rect x="1.7391%" y="1397" width="0.8696%" height="15" fill="rgb(251,123,47)"/><text x="1.9891%" y="1407.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.87%)</title><rect x="1.7391%" y="1381" width="0.8696%" height="15" fill="rgb(221,13,13)"/><text x="1.9891%" y="1391.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.87%)</title><rect x="1.7391%" y="1365" width="0.8696%" height="15" fill="rgb(238,131,9)"/><text x="1.9891%" y="1375.50"></text></g><g><title>std::panicking::try (1 samples, 0.87%)</title><rect x="1.7391%" y="1349" width="0.8696%" height="15" fill="rgb(211,50,8)"/><text x="1.9891%" y="1359.50"></text></g><g><title>__rust_maybe_catch_panic (1 samples, 0.87%)</title><rect x="1.7391%" y="1333" width="0.8696%" height="15" fill="rgb(245,182,24)"/><text x="1.9891%" y="1343.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.87%)</title><rect x="1.7391%" y="1317" width="0.8696%" height="15" fill="rgb(242,14,37)"/><text x="1.9891%" y="1327.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (1 samples, 0.87%)</title><rect x="1.7391%" y="1301" width="0.8696%" height="15" fill="rgb(246,228,12)"/><text x="1.9891%" y="1311.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::_{{closure}} (1 samples, 0.87%)</title><rect x="1.7391%" y="1285" width="0.8696%" height="15" fill="rgb(213,55,15)"/><text x="1.9891%" y="1295.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1 samples, 0.87%)</title><rect x="1.7391%" y="1269" width="0.8696%" height="15" fill="rgb(209,9,3)"/><text x="1.9891%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="1.7391%" y="1253" width="0.8696%" height="15" fill="rgb(230,59,30)"/><text x="1.9891%" y="1263.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="1.7391%" y="1237" width="0.8696%" height="15" fill="rgb(209,121,21)"/><text x="1.9891%" y="1247.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="1.7391%" y="1221" width="0.8696%" height="15" fill="rgb(220,109,13)"/><text x="1.9891%" y="1231.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="1.7391%" y="1205" width="0.8696%" height="15" fill="rgb(232,18,1)"/><text x="1.9891%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="1.7391%" y="1189" width="0.8696%" height="15" fill="rgb(215,41,42)"/><text x="1.9891%" y="1199.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.87%)</title><rect x="1.7391%" y="1173" width="0.8696%" height="15" fill="rgb(224,123,36)"/><text x="1.9891%" y="1183.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.87%)</title><rect x="1.7391%" y="1157" width="0.8696%" height="15" fill="rgb(240,125,3)"/><text x="1.9891%" y="1167.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1 samples, 0.87%)</title><rect x="1.7391%" y="1141" width="0.8696%" height="15" fill="rgb(205,98,50)"/><text x="1.9891%" y="1151.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.87%)</title><rect x="1.7391%" y="1125" width="0.8696%" height="15" fill="rgb(205,185,37)"/><text x="1.9891%" y="1135.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1 samples, 0.87%)</title><rect x="1.7391%" y="1109" width="0.8696%" height="15" fill="rgb(238,207,15)"/><text x="1.9891%" y="1119.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.87%)</title><rect x="1.7391%" y="1093" width="0.8696%" height="15" fill="rgb(213,199,42)"/><text x="1.9891%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.87%)</title><rect x="1.7391%" y="1077" width="0.8696%" height="15" fill="rgb(235,201,11)"/><text x="1.9891%" y="1087.50"></text></g><g><title>std::panicking::try (1 samples, 0.87%)</title><rect x="1.7391%" y="1061" width="0.8696%" height="15" fill="rgb(207,46,11)"/><text x="1.9891%" y="1071.50"></text></g><g><title>__rust_maybe_catch_panic (1 samples, 0.87%)</title><rect x="1.7391%" y="1045" width="0.8696%" height="15" fill="rgb(241,35,35)"/><text x="1.9891%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.87%)</title><rect x="1.7391%" y="1029" width="0.8696%" height="15" fill="rgb(243,32,47)"/><text x="1.9891%" y="1039.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (1 samples, 0.87%)</title><rect x="1.7391%" y="1013" width="0.8696%" height="15" fill="rgb(247,202,23)"/><text x="1.9891%" y="1023.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::_{{closure}} (1 samples, 0.87%)</title><rect x="1.7391%" y="997" width="0.8696%" height="15" fill="rgb(219,102,11)"/><text x="1.9891%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1 samples, 0.87%)</title><rect x="1.7391%" y="981" width="0.8696%" height="15" fill="rgb(243,110,44)"/><text x="1.9891%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="1.7391%" y="965" width="0.8696%" height="15" fill="rgb(222,74,54)"/><text x="1.9891%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="1.7391%" y="949" width="0.8696%" height="15" fill="rgb(216,99,12)"/><text x="1.9891%" y="959.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="1.7391%" y="933" width="0.8696%" height="15" fill="rgb(226,22,26)"/><text x="1.9891%" y="943.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="1.7391%" y="917" width="0.8696%" height="15" fill="rgb(217,163,10)"/><text x="1.9891%" y="927.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="1.7391%" y="901" width="0.8696%" height="15" fill="rgb(213,25,53)"/><text x="1.9891%" y="911.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.87%)</title><rect x="1.7391%" y="885" width="0.8696%" height="15" fill="rgb(252,105,26)"/><text x="1.9891%" y="895.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.87%)</title><rect x="1.7391%" y="869" width="0.8696%" height="15" fill="rgb(220,39,43)"/><text x="1.9891%" y="879.50"></text></g><g><title>std::panicking::try (1 samples, 0.87%)</title><rect x="1.7391%" y="853" width="0.8696%" height="15" fill="rgb(229,68,48)"/><text x="1.9891%" y="863.50"></text></g><g><title>__rust_maybe_catch_panic (1 samples, 0.87%)</title><rect x="1.7391%" y="837" width="0.8696%" height="15" fill="rgb(252,8,32)"/><text x="1.9891%" y="847.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.87%)</title><rect x="1.7391%" y="821" width="0.8696%" height="15" fill="rgb(223,20,43)"/><text x="1.9891%" y="831.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (1 samples, 0.87%)</title><rect x="1.7391%" y="805" width="0.8696%" height="15" fill="rgb(229,81,49)"/><text x="1.9891%" y="815.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (1 samples, 0.87%)</title><rect x="1.7391%" y="789" width="0.8696%" height="15" fill="rgb(236,28,36)"/><text x="1.9891%" y="799.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="1.7391%" y="773" width="0.8696%" height="15" fill="rgb(249,185,26)"/><text x="1.9891%" y="783.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="1.7391%" y="757" width="0.8696%" height="15" fill="rgb(249,174,33)"/><text x="1.9891%" y="767.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="1.7391%" y="741" width="0.8696%" height="15" fill="rgb(233,201,37)"/><text x="1.9891%" y="751.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="1.7391%" y="725" width="0.8696%" height="15" fill="rgb(221,78,26)"/><text x="1.9891%" y="735.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="1.7391%" y="709" width="0.8696%" height="15" fill="rgb(250,127,30)"/><text x="1.9891%" y="719.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.87%)</title><rect x="1.7391%" y="693" width="0.8696%" height="15" fill="rgb(230,49,44)"/><text x="1.9891%" y="703.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.87%)</title><rect x="1.7391%" y="677" width="0.8696%" height="15" fill="rgb(229,67,23)"/><text x="1.9891%" y="687.50"></text></g><g><title>std::panicking::try (1 samples, 0.87%)</title><rect x="1.7391%" y="661" width="0.8696%" height="15" fill="rgb(249,83,47)"/><text x="1.9891%" y="671.50"></text></g><g><title>__rust_maybe_catch_panic (1 samples, 0.87%)</title><rect x="1.7391%" y="645" width="0.8696%" height="15" fill="rgb(215,43,3)"/><text x="1.9891%" y="655.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.87%)</title><rect x="1.7391%" y="629" width="0.8696%" height="15" fill="rgb(238,154,13)"/><text x="1.9891%" y="639.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (1 samples, 0.87%)</title><rect x="1.7391%" y="613" width="0.8696%" height="15" fill="rgb(219,56,2)"/><text x="1.9891%" y="623.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (1 samples, 0.87%)</title><rect x="1.7391%" y="597" width="0.8696%" height="15" fill="rgb(233,0,4)"/><text x="1.9891%" y="607.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="1.7391%" y="581" width="0.8696%" height="15" fill="rgb(235,30,7)"/><text x="1.9891%" y="591.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="1.7391%" y="565" width="0.8696%" height="15" fill="rgb(250,79,13)"/><text x="1.9891%" y="575.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="1.7391%" y="549" width="0.8696%" height="15" fill="rgb(211,146,34)"/><text x="1.9891%" y="559.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="1.7391%" y="533" width="0.8696%" height="15" fill="rgb(228,22,38)"/><text x="1.9891%" y="543.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="1.7391%" y="517" width="0.8696%" height="15" fill="rgb(235,168,5)"/><text x="1.9891%" y="527.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.87%)</title><rect x="1.7391%" y="501" width="0.8696%" height="15" fill="rgb(221,155,16)"/><text x="1.9891%" y="511.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1 samples, 0.87%)</title><rect x="1.7391%" y="485" width="0.8696%" height="15" fill="rgb(215,215,53)"/><text x="1.9891%" y="495.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="1.7391%" y="469" width="0.8696%" height="15" fill="rgb(223,4,10)"/><text x="1.9891%" y="479.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="1.7391%" y="453" width="0.8696%" height="15" fill="rgb(234,103,6)"/><text x="1.9891%" y="463.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="1.7391%" y="437" width="0.8696%" height="15" fill="rgb(227,97,0)"/><text x="1.9891%" y="447.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="1.7391%" y="421" width="0.8696%" height="15" fill="rgb(234,150,53)"/><text x="1.9891%" y="431.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="1.7391%" y="405" width="0.8696%" height="15" fill="rgb(228,201,54)"/><text x="1.9891%" y="415.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.87%)</title><rect x="1.7391%" y="389" width="0.8696%" height="15" fill="rgb(222,22,37)"/><text x="1.9891%" y="399.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1 samples, 0.87%)</title><rect x="1.7391%" y="373" width="0.8696%" height="15" fill="rgb(237,53,32)"/><text x="1.9891%" y="383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="1.7391%" y="357" width="0.8696%" height="15" fill="rgb(233,25,53)"/><text x="1.9891%" y="367.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="1.7391%" y="341" width="0.8696%" height="15" fill="rgb(210,40,34)"/><text x="1.9891%" y="351.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="1.7391%" y="325" width="0.8696%" height="15" fill="rgb(241,220,44)"/><text x="1.9891%" y="335.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="1.7391%" y="309" width="0.8696%" height="15" fill="rgb(235,28,35)"/><text x="1.9891%" y="319.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="1.7391%" y="293" width="0.8696%" height="15" fill="rgb(210,56,17)"/><text x="1.9891%" y="303.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.87%)</title><rect x="1.7391%" y="277" width="0.8696%" height="15" fill="rgb(224,130,29)"/><text x="1.9891%" y="287.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1 samples, 0.87%)</title><rect x="1.7391%" y="261" width="0.8696%" height="15" fill="rgb(235,212,8)"/><text x="1.9891%" y="271.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="1.7391%" y="245" width="0.8696%" height="15" fill="rgb(223,33,50)"/><text x="1.9891%" y="255.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="1.7391%" y="229" width="0.8696%" height="15" fill="rgb(219,149,13)"/><text x="1.9891%" y="239.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.87%)</title><rect x="1.7391%" y="213" width="0.8696%" height="15" fill="rgb(250,156,29)"/><text x="1.9891%" y="223.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.87%)</title><rect x="1.7391%" y="197" width="0.8696%" height="15" fill="rgb(216,193,19)"/><text x="1.9891%" y="207.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.87%)</title><rect x="1.7391%" y="181" width="0.8696%" height="15" fill="rgb(216,135,14)"/><text x="1.9891%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.87%)</title><rect x="1.7391%" y="165" width="0.8696%" height="15" fill="rgb(241,47,5)"/><text x="1.9891%" y="175.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.87%)</title><rect x="1.7391%" y="149" width="0.8696%" height="15" fill="rgb(233,42,35)"/><text x="1.9891%" y="159.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.87%)</title><rect x="1.7391%" y="133" width="0.8696%" height="15" fill="rgb(231,13,6)"/><text x="1.9891%" y="143.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.87%)</title><rect x="1.7391%" y="117" width="0.8696%" height="15" fill="rgb(207,181,40)"/><text x="1.9891%" y="127.50"></text></g><g><title>&lt;noise::noise_fns::generators::perlin::Perlin as noise::noise_fns::NoiseFieldFn&lt;noise::noisefield::NoiseField3D&gt;&gt;::process_field::_{{closure}} (1 samples, 0.87%)</title><rect x="1.7391%" y="101" width="0.8696%" height="15" fill="rgb(254,173,49)"/><text x="1.9891%" y="111.50"></text></g><g><title>&lt;noise::noise_fns::generators::perlin::Perlin as noise::noise_fns::NoiseFieldFn&lt;noise::noisefield::NoiseField3D&gt;&gt;::process_field::surflet (1 samples, 0.87%)</title><rect x="1.7391%" y="85" width="0.8696%" height="15" fill="rgb(221,1,38)"/><text x="1.9891%" y="95.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 5.22%)</title><rect x="0.8696%" y="2069" width="5.2174%" height="15" fill="rgb(206,124,46)"/><text x="1.1196%" y="2079.50">rayon_..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (6 samples, 5.22%)</title><rect x="0.8696%" y="2053" width="5.2174%" height="15" fill="rgb(249,21,11)"/><text x="1.1196%" y="2063.50">rayon_..</text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 3.48%)</title><rect x="2.6087%" y="2037" width="3.4783%" height="15" fill="rgb(222,201,40)"/><text x="2.8587%" y="2047.50">ray..</text></g><g><title>std::panic::catch_unwind (4 samples, 3.48%)</title><rect x="2.6087%" y="2021" width="3.4783%" height="15" fill="rgb(235,61,29)"/><text x="2.8587%" y="2031.50">std..</text></g><g><title>std::panicking::try (4 samples, 3.48%)</title><rect x="2.6087%" y="2005" width="3.4783%" height="15" fill="rgb(219,207,3)"/><text x="2.8587%" y="2015.50">std..</text></g><g><title>__rust_maybe_catch_panic (4 samples, 3.48%)</title><rect x="2.6087%" y="1989" width="3.4783%" height="15" fill="rgb(222,56,46)"/><text x="2.8587%" y="1999.50">__r..</text></g><g><title>std::panicking::try::do_call (4 samples, 3.48%)</title><rect x="2.6087%" y="1973" width="3.4783%" height="15" fill="rgb(239,76,54)"/><text x="2.8587%" y="1983.50">std..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (4 samples, 3.48%)</title><rect x="2.6087%" y="1957" width="3.4783%" height="15" fill="rgb(231,124,27)"/><text x="2.8587%" y="1967.50">&lt;st..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (4 samples, 3.48%)</title><rect x="2.6087%" y="1941" width="3.4783%" height="15" fill="rgb(249,195,6)"/><text x="2.8587%" y="1951.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (4 samples, 3.48%)</title><rect x="2.6087%" y="1925" width="3.4783%" height="15" fill="rgb(237,174,47)"/><text x="2.8587%" y="1935.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 3.48%)</title><rect x="2.6087%" y="1909" width="3.4783%" height="15" fill="rgb(206,201,31)"/><text x="2.8587%" y="1919.50">ray..</text></g><g><title>rayon_core::join::join_context (4 samples, 3.48%)</title><rect x="2.6087%" y="1893" width="3.4783%" height="15" fill="rgb(231,57,52)"/><text x="2.8587%" y="1903.50">ray..</text></g><g><title>rayon_core::registry::in_worker (4 samples, 3.48%)</title><rect x="2.6087%" y="1877" width="3.4783%" height="15" fill="rgb(248,177,22)"/><text x="2.8587%" y="1887.50">ray..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (4 samples, 3.48%)</title><rect x="2.6087%" y="1861" width="3.4783%" height="15" fill="rgb(215,211,37)"/><text x="2.8587%" y="1871.50">ray..</text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 3.48%)</title><rect x="2.6087%" y="1845" width="3.4783%" height="15" fill="rgb(241,128,51)"/><text x="2.8587%" y="1855.50">ray..</text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (4 samples, 3.48%)</title><rect x="2.6087%" y="1829" width="3.4783%" height="15" fill="rgb(227,165,31)"/><text x="2.8587%" y="1839.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (4 samples, 3.48%)</title><rect x="2.6087%" y="1813" width="3.4783%" height="15" fill="rgb(228,167,24)"/><text x="2.8587%" y="1823.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 3.48%)</title><rect x="2.6087%" y="1797" width="3.4783%" height="15" fill="rgb(228,143,12)"/><text x="2.8587%" y="1807.50">ray..</text></g><g><title>rayon_core::join::join_context (4 samples, 3.48%)</title><rect x="2.6087%" y="1781" width="3.4783%" height="15" fill="rgb(249,149,8)"/><text x="2.8587%" y="1791.50">ray..</text></g><g><title>rayon_core::registry::in_worker (4 samples, 3.48%)</title><rect x="2.6087%" y="1765" width="3.4783%" height="15" fill="rgb(243,35,44)"/><text x="2.8587%" y="1775.50">ray..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (4 samples, 3.48%)</title><rect x="2.6087%" y="1749" width="3.4783%" height="15" fill="rgb(246,89,9)"/><text x="2.8587%" y="1759.50">ray..</text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 3.48%)</title><rect x="2.6087%" y="1733" width="3.4783%" height="15" fill="rgb(233,213,13)"/><text x="2.8587%" y="1743.50">ray..</text></g><g><title>std::panic::catch_unwind (4 samples, 3.48%)</title><rect x="2.6087%" y="1717" width="3.4783%" height="15" fill="rgb(233,141,41)"/><text x="2.8587%" y="1727.50">std..</text></g><g><title>std::panicking::try (4 samples, 3.48%)</title><rect x="2.6087%" y="1701" width="3.4783%" height="15" fill="rgb(239,167,4)"/><text x="2.8587%" y="1711.50">std..</text></g><g><title>__rust_maybe_catch_panic (4 samples, 3.48%)</title><rect x="2.6087%" y="1685" width="3.4783%" height="15" fill="rgb(209,217,16)"/><text x="2.8587%" y="1695.50">__r..</text></g><g><title>std::panicking::try::do_call (4 samples, 3.48%)</title><rect x="2.6087%" y="1669" width="3.4783%" height="15" fill="rgb(219,88,35)"/><text x="2.8587%" y="1679.50">std..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (4 samples, 3.48%)</title><rect x="2.6087%" y="1653" width="3.4783%" height="15" fill="rgb(220,193,23)"/><text x="2.8587%" y="1663.50">&lt;st..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (4 samples, 3.48%)</title><rect x="2.6087%" y="1637" width="3.4783%" height="15" fill="rgb(230,90,52)"/><text x="2.8587%" y="1647.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (4 samples, 3.48%)</title><rect x="2.6087%" y="1621" width="3.4783%" height="15" fill="rgb(252,106,19)"/><text x="2.8587%" y="1631.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 3.48%)</title><rect x="2.6087%" y="1605" width="3.4783%" height="15" fill="rgb(206,74,20)"/><text x="2.8587%" y="1615.50">ray..</text></g><g><title>rayon_core::join::join_context (4 samples, 3.48%)</title><rect x="2.6087%" y="1589" width="3.4783%" height="15" fill="rgb(230,138,44)"/><text x="2.8587%" y="1599.50">ray..</text></g><g><title>rayon_core::registry::in_worker (4 samples, 3.48%)</title><rect x="2.6087%" y="1573" width="3.4783%" height="15" fill="rgb(235,182,43)"/><text x="2.8587%" y="1583.50">ray..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (4 samples, 3.48%)</title><rect x="2.6087%" y="1557" width="3.4783%" height="15" fill="rgb(242,16,51)"/><text x="2.8587%" y="1567.50">ray..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (4 samples, 3.48%)</title><rect x="2.6087%" y="1541" width="3.4783%" height="15" fill="rgb(248,9,4)"/><text x="2.8587%" y="1551.50">ray..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (4 samples, 3.48%)</title><rect x="2.6087%" y="1525" width="3.4783%" height="15" fill="rgb(210,31,22)"/><text x="2.8587%" y="1535.50">ray..</text></g><g><title>rayon_core::registry::WorkerThread::execute (4 samples, 3.48%)</title><rect x="2.6087%" y="1509" width="3.4783%" height="15" fill="rgb(239,54,39)"/><text x="2.8587%" y="1519.50">ray..</text></g><g><title>rayon_core::job::JobRef::execute (4 samples, 3.48%)</title><rect x="2.6087%" y="1493" width="3.4783%" height="15" fill="rgb(230,99,41)"/><text x="2.8587%" y="1503.50">ray..</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4 samples, 3.48%)</title><rect x="2.6087%" y="1477" width="3.4783%" height="15" fill="rgb(253,106,12)"/><text x="2.8587%" y="1487.50">&lt;ra..</text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 3.48%)</title><rect x="2.6087%" y="1461" width="3.4783%" height="15" fill="rgb(213,46,41)"/><text x="2.8587%" y="1471.50">ray..</text></g><g><title>std::panic::catch_unwind (4 samples, 3.48%)</title><rect x="2.6087%" y="1445" width="3.4783%" height="15" fill="rgb(215,133,35)"/><text x="2.8587%" y="1455.50">std..</text></g><g><title>std::panicking::try (4 samples, 3.48%)</title><rect x="2.6087%" y="1429" width="3.4783%" height="15" fill="rgb(213,28,5)"/><text x="2.8587%" y="1439.50">std..</text></g><g><title>__rust_maybe_catch_panic (4 samples, 3.48%)</title><rect x="2.6087%" y="1413" width="3.4783%" height="15" fill="rgb(215,77,49)"/><text x="2.8587%" y="1423.50">__r..</text></g><g><title>std::panicking::try::do_call (4 samples, 3.48%)</title><rect x="2.6087%" y="1397" width="3.4783%" height="15" fill="rgb(248,100,22)"/><text x="2.8587%" y="1407.50">std..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (4 samples, 3.48%)</title><rect x="2.6087%" y="1381" width="3.4783%" height="15" fill="rgb(208,67,9)"/><text x="2.8587%" y="1391.50">&lt;st..</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::_{{closure}} (4 samples, 3.48%)</title><rect x="2.6087%" y="1365" width="3.4783%" height="15" fill="rgb(219,133,21)"/><text x="2.8587%" y="1375.50">&lt;ra..</text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (4 samples, 3.48%)</title><rect x="2.6087%" y="1349" width="3.4783%" height="15" fill="rgb(246,46,29)"/><text x="2.8587%" y="1359.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (4 samples, 3.48%)</title><rect x="2.6087%" y="1333" width="3.4783%" height="15" fill="rgb(246,185,52)"/><text x="2.8587%" y="1343.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 3.48%)</title><rect x="2.6087%" y="1317" width="3.4783%" height="15" fill="rgb(252,136,11)"/><text x="2.8587%" y="1327.50">ray..</text></g><g><title>rayon_core::join::join_context (4 samples, 3.48%)</title><rect x="2.6087%" y="1301" width="3.4783%" height="15" fill="rgb(219,138,53)"/><text x="2.8587%" y="1311.50">ray..</text></g><g><title>rayon_core::registry::in_worker (4 samples, 3.48%)</title><rect x="2.6087%" y="1285" width="3.4783%" height="15" fill="rgb(211,51,23)"/><text x="2.8587%" y="1295.50">ray..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (4 samples, 3.48%)</title><rect x="2.6087%" y="1269" width="3.4783%" height="15" fill="rgb(247,221,28)"/><text x="2.8587%" y="1279.50">ray..</text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 3.48%)</title><rect x="2.6087%" y="1253" width="3.4783%" height="15" fill="rgb(251,222,45)"/><text x="2.8587%" y="1263.50">ray..</text></g><g><title>std::panic::catch_unwind (4 samples, 3.48%)</title><rect x="2.6087%" y="1237" width="3.4783%" height="15" fill="rgb(217,162,53)"/><text x="2.8587%" y="1247.50">std..</text></g><g><title>std::panicking::try (4 samples, 3.48%)</title><rect x="2.6087%" y="1221" width="3.4783%" height="15" fill="rgb(229,93,14)"/><text x="2.8587%" y="1231.50">std..</text></g><g><title>__rust_maybe_catch_panic (4 samples, 3.48%)</title><rect x="2.6087%" y="1205" width="3.4783%" height="15" fill="rgb(209,67,49)"/><text x="2.8587%" y="1215.50">__r..</text></g><g><title>std::panicking::try::do_call (4 samples, 3.48%)</title><rect x="2.6087%" y="1189" width="3.4783%" height="15" fill="rgb(213,87,29)"/><text x="2.8587%" y="1199.50">std..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (4 samples, 3.48%)</title><rect x="2.6087%" y="1173" width="3.4783%" height="15" fill="rgb(205,151,52)"/><text x="2.8587%" y="1183.50">&lt;st..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (4 samples, 3.48%)</title><rect x="2.6087%" y="1157" width="3.4783%" height="15" fill="rgb(253,215,39)"/><text x="2.8587%" y="1167.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (4 samples, 3.48%)</title><rect x="2.6087%" y="1141" width="3.4783%" height="15" fill="rgb(221,220,41)"/><text x="2.8587%" y="1151.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 3.48%)</title><rect x="2.6087%" y="1125" width="3.4783%" height="15" fill="rgb(218,133,21)"/><text x="2.8587%" y="1135.50">ray..</text></g><g><title>rayon_core::join::join_context (4 samples, 3.48%)</title><rect x="2.6087%" y="1109" width="3.4783%" height="15" fill="rgb(221,193,43)"/><text x="2.8587%" y="1119.50">ray..</text></g><g><title>rayon_core::registry::in_worker (4 samples, 3.48%)</title><rect x="2.6087%" y="1093" width="3.4783%" height="15" fill="rgb(240,128,52)"/><text x="2.8587%" y="1103.50">ray..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (4 samples, 3.48%)</title><rect x="2.6087%" y="1077" width="3.4783%" height="15" fill="rgb(253,114,12)"/><text x="2.8587%" y="1087.50">ray..</text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 3.48%)</title><rect x="2.6087%" y="1061" width="3.4783%" height="15" fill="rgb(215,223,47)"/><text x="2.8587%" y="1071.50">ray..</text></g><g><title>std::panic::catch_unwind (4 samples, 3.48%)</title><rect x="2.6087%" y="1045" width="3.4783%" height="15" fill="rgb(248,225,23)"/><text x="2.8587%" y="1055.50">std..</text></g><g><title>std::panicking::try (4 samples, 3.48%)</title><rect x="2.6087%" y="1029" width="3.4783%" height="15" fill="rgb(250,108,0)"/><text x="2.8587%" y="1039.50">std..</text></g><g><title>__rust_maybe_catch_panic (4 samples, 3.48%)</title><rect x="2.6087%" y="1013" width="3.4783%" height="15" fill="rgb(228,208,7)"/><text x="2.8587%" y="1023.50">__r..</text></g><g><title>std::panicking::try::do_call (4 samples, 3.48%)</title><rect x="2.6087%" y="997" width="3.4783%" height="15" fill="rgb(244,45,10)"/><text x="2.8587%" y="1007.50">std..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (4 samples, 3.48%)</title><rect x="2.6087%" y="981" width="3.4783%" height="15" fill="rgb(207,125,25)"/><text x="2.8587%" y="991.50">&lt;st..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (4 samples, 3.48%)</title><rect x="2.6087%" y="965" width="3.4783%" height="15" fill="rgb(210,195,18)"/><text x="2.8587%" y="975.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (4 samples, 3.48%)</title><rect x="2.6087%" y="949" width="3.4783%" height="15" fill="rgb(249,80,12)"/><text x="2.8587%" y="959.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 3.48%)</title><rect x="2.6087%" y="933" width="3.4783%" height="15" fill="rgb(221,65,9)"/><text x="2.8587%" y="943.50">ray..</text></g><g><title>rayon_core::join::join_context (4 samples, 3.48%)</title><rect x="2.6087%" y="917" width="3.4783%" height="15" fill="rgb(235,49,36)"/><text x="2.8587%" y="927.50">ray..</text></g><g><title>rayon_core::registry::in_worker (4 samples, 3.48%)</title><rect x="2.6087%" y="901" width="3.4783%" height="15" fill="rgb(225,32,20)"/><text x="2.8587%" y="911.50">ray..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (4 samples, 3.48%)</title><rect x="2.6087%" y="885" width="3.4783%" height="15" fill="rgb(215,141,46)"/><text x="2.8587%" y="895.50">ray..</text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 3.48%)</title><rect x="2.6087%" y="869" width="3.4783%" height="15" fill="rgb(250,160,47)"/><text x="2.8587%" y="879.50">ray..</text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (4 samples, 3.48%)</title><rect x="2.6087%" y="853" width="3.4783%" height="15" fill="rgb(216,222,40)"/><text x="2.8587%" y="863.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (4 samples, 3.48%)</title><rect x="2.6087%" y="837" width="3.4783%" height="15" fill="rgb(234,217,39)"/><text x="2.8587%" y="847.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 3.48%)</title><rect x="2.6087%" y="821" width="3.4783%" height="15" fill="rgb(207,178,40)"/><text x="2.8587%" y="831.50">ray..</text></g><g><title>rayon_core::join::join_context (4 samples, 3.48%)</title><rect x="2.6087%" y="805" width="3.4783%" height="15" fill="rgb(221,136,13)"/><text x="2.8587%" y="815.50">ray..</text></g><g><title>rayon_core::registry::in_worker (4 samples, 3.48%)</title><rect x="2.6087%" y="789" width="3.4783%" height="15" fill="rgb(249,199,10)"/><text x="2.8587%" y="799.50">ray..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (4 samples, 3.48%)</title><rect x="2.6087%" y="773" width="3.4783%" height="15" fill="rgb(249,222,13)"/><text x="2.8587%" y="783.50">ray..</text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 3.48%)</title><rect x="2.6087%" y="757" width="3.4783%" height="15" fill="rgb(244,185,38)"/><text x="2.8587%" y="767.50">ray..</text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (4 samples, 3.48%)</title><rect x="2.6087%" y="741" width="3.4783%" height="15" fill="rgb(236,202,9)"/><text x="2.8587%" y="751.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (4 samples, 3.48%)</title><rect x="2.6087%" y="725" width="3.4783%" height="15" fill="rgb(250,229,37)"/><text x="2.8587%" y="735.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 3.48%)</title><rect x="2.6087%" y="709" width="3.4783%" height="15" fill="rgb(206,174,23)"/><text x="2.8587%" y="719.50">ray..</text></g><g><title>rayon_core::join::join_context (4 samples, 3.48%)</title><rect x="2.6087%" y="693" width="3.4783%" height="15" fill="rgb(211,33,43)"/><text x="2.8587%" y="703.50">ray..</text></g><g><title>rayon_core::registry::in_worker (4 samples, 3.48%)</title><rect x="2.6087%" y="677" width="3.4783%" height="15" fill="rgb(245,58,50)"/><text x="2.8587%" y="687.50">ray..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (4 samples, 3.48%)</title><rect x="2.6087%" y="661" width="3.4783%" height="15" fill="rgb(244,68,36)"/><text x="2.8587%" y="671.50">ray..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (4 samples, 3.48%)</title><rect x="2.6087%" y="645" width="3.4783%" height="15" fill="rgb(232,229,15)"/><text x="2.8587%" y="655.50">ray..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (4 samples, 3.48%)</title><rect x="2.6087%" y="629" width="3.4783%" height="15" fill="rgb(254,30,23)"/><text x="2.8587%" y="639.50">ray..</text></g><g><title>rayon_core::registry::WorkerThread::execute (4 samples, 3.48%)</title><rect x="2.6087%" y="613" width="3.4783%" height="15" fill="rgb(235,160,14)"/><text x="2.8587%" y="623.50">ray..</text></g><g><title>rayon_core::job::JobRef::execute (4 samples, 3.48%)</title><rect x="2.6087%" y="597" width="3.4783%" height="15" fill="rgb(212,155,44)"/><text x="2.8587%" y="607.50">ray..</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4 samples, 3.48%)</title><rect x="2.6087%" y="581" width="3.4783%" height="15" fill="rgb(226,2,50)"/><text x="2.8587%" y="591.50">&lt;ra..</text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 3.48%)</title><rect x="2.6087%" y="565" width="3.4783%" height="15" fill="rgb(234,177,6)"/><text x="2.8587%" y="575.50">ray..</text></g><g><title>std::panic::catch_unwind (4 samples, 3.48%)</title><rect x="2.6087%" y="549" width="3.4783%" height="15" fill="rgb(217,24,9)"/><text x="2.8587%" y="559.50">std..</text></g><g><title>std::panicking::try (4 samples, 3.48%)</title><rect x="2.6087%" y="533" width="3.4783%" height="15" fill="rgb(220,13,46)"/><text x="2.8587%" y="543.50">std..</text></g><g><title>__rust_maybe_catch_panic (4 samples, 3.48%)</title><rect x="2.6087%" y="517" width="3.4783%" height="15" fill="rgb(239,221,27)"/><text x="2.8587%" y="527.50">__r..</text></g><g><title>std::panicking::try::do_call (4 samples, 3.48%)</title><rect x="2.6087%" y="501" width="3.4783%" height="15" fill="rgb(222,198,25)"/><text x="2.8587%" y="511.50">std..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (4 samples, 3.48%)</title><rect x="2.6087%" y="485" width="3.4783%" height="15" fill="rgb(211,99,13)"/><text x="2.8587%" y="495.50">&lt;st..</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::_{{closure}} (4 samples, 3.48%)</title><rect x="2.6087%" y="469" width="3.4783%" height="15" fill="rgb(232,111,31)"/><text x="2.8587%" y="479.50">&lt;ra..</text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (4 samples, 3.48%)</title><rect x="2.6087%" y="453" width="3.4783%" height="15" fill="rgb(245,82,37)"/><text x="2.8587%" y="463.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (4 samples, 3.48%)</title><rect x="2.6087%" y="437" width="3.4783%" height="15" fill="rgb(227,149,46)"/><text x="2.8587%" y="447.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 3.48%)</title><rect x="2.6087%" y="421" width="3.4783%" height="15" fill="rgb(218,36,50)"/><text x="2.8587%" y="431.50">ray..</text></g><g><title>rayon_core::join::join_context (4 samples, 3.48%)</title><rect x="2.6087%" y="405" width="3.4783%" height="15" fill="rgb(226,80,48)"/><text x="2.8587%" y="415.50">ray..</text></g><g><title>rayon_core::registry::in_worker (4 samples, 3.48%)</title><rect x="2.6087%" y="389" width="3.4783%" height="15" fill="rgb(238,224,15)"/><text x="2.8587%" y="399.50">ray..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (4 samples, 3.48%)</title><rect x="2.6087%" y="373" width="3.4783%" height="15" fill="rgb(241,136,10)"/><text x="2.8587%" y="383.50">ray..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (4 samples, 3.48%)</title><rect x="2.6087%" y="357" width="3.4783%" height="15" fill="rgb(208,32,45)"/><text x="2.8587%" y="367.50">ray..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (4 samples, 3.48%)</title><rect x="2.6087%" y="341" width="3.4783%" height="15" fill="rgb(207,135,9)"/><text x="2.8587%" y="351.50">ray..</text></g><g><title>rayon_core::sleep::Sleep::no_work_found (4 samples, 3.48%)</title><rect x="2.6087%" y="325" width="3.4783%" height="15" fill="rgb(206,86,44)"/><text x="2.8587%" y="335.50">ray..</text></g><g><title>rayon_core::sleep::Sleep::sleep (4 samples, 3.48%)</title><rect x="2.6087%" y="309" width="3.4783%" height="15" fill="rgb(245,177,15)"/><text x="2.8587%" y="319.50">ray..</text></g><g><title>std::sync::condvar::Condvar::wait (4 samples, 3.48%)</title><rect x="2.6087%" y="293" width="3.4783%" height="15" fill="rgb(206,64,50)"/><text x="2.8587%" y="303.50">std..</text></g><g><title>std::sys_common::condvar::Condvar::wait (4 samples, 3.48%)</title><rect x="2.6087%" y="277" width="3.4783%" height="15" fill="rgb(234,36,40)"/><text x="2.8587%" y="287.50">std..</text></g><g><title>std::sys::unix::condvar::Condvar::wait (4 samples, 3.48%)</title><rect x="2.6087%" y="261" width="3.4783%" height="15" fill="rgb(213,64,8)"/><text x="2.8587%" y="271.50">std..</text></g><g><title>__pthread_cond_wait (4 samples, 3.48%)</title><rect x="2.6087%" y="245" width="3.4783%" height="15" fill="rgb(210,75,36)"/><text x="2.8587%" y="255.50">__p..</text></g><g><title>[unknown] (7 samples, 6.09%)</title><rect x="0.8696%" y="2085" width="6.0870%" height="15" fill="rgb(229,88,21)"/><text x="1.1196%" y="2095.50">[unknown]</text></g><g><title>std::panicking::try::do_call (1 samples, 0.87%)</title><rect x="6.0870%" y="2069" width="0.8696%" height="15" fill="rgb(252,204,47)"/><text x="6.3370%" y="2079.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (1 samples, 0.87%)</title><rect x="6.0870%" y="2053" width="0.8696%" height="15" fill="rgb(208,77,27)"/><text x="6.3370%" y="2063.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::_{{closure}}::_{{closure}} (1 samples, 0.87%)</title><rect x="6.0870%" y="2037" width="0.8696%" height="15" fill="rgb(221,76,26)"/><text x="6.3370%" y="2047.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.87%)</title><rect x="6.0870%" y="2021" width="0.8696%" height="15" fill="rgb(225,139,18)"/><text x="6.3370%" y="2031.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::_{{closure}} (1 samples, 0.87%)</title><rect x="6.0870%" y="2005" width="0.8696%" height="15" fill="rgb(230,137,11)"/><text x="6.3370%" y="2015.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (1 samples, 0.87%)</title><rect x="6.0870%" y="1989" width="0.8696%" height="15" fill="rgb(212,28,1)"/><text x="6.3370%" y="1999.50"></text></g><g><title>rayon_core::registry::main_loop (1 samples, 0.87%)</title><rect x="6.0870%" y="1973" width="0.8696%" height="15" fill="rgb(248,164,17)"/><text x="6.3370%" y="1983.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.87%)</title><rect x="6.0870%" y="1957" width="0.8696%" height="15" fill="rgb(222,171,42)"/><text x="6.3370%" y="1967.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.87%)</title><rect x="6.0870%" y="1941" width="0.8696%" height="15" fill="rgb(243,84,45)"/><text x="6.3370%" y="1951.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1 samples, 0.87%)</title><rect x="6.0870%" y="1925" width="0.8696%" height="15" fill="rgb(252,49,23)"/><text x="6.3370%" y="1935.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.87%)</title><rect x="6.0870%" y="1909" width="0.8696%" height="15" fill="rgb(215,19,7)"/><text x="6.3370%" y="1919.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1 samples, 0.87%)</title><rect x="6.0870%" y="1893" width="0.8696%" height="15" fill="rgb(238,81,41)"/><text x="6.3370%" y="1903.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.87%)</title><rect x="6.0870%" y="1877" width="0.8696%" height="15" fill="rgb(210,199,37)"/><text x="6.3370%" y="1887.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.87%)</title><rect x="6.0870%" y="1861" width="0.8696%" height="15" fill="rgb(244,192,49)"/><text x="6.3370%" y="1871.50"></text></g><g><title>std::panicking::try (1 samples, 0.87%)</title><rect x="6.0870%" y="1845" width="0.8696%" height="15" fill="rgb(226,211,11)"/><text x="6.3370%" y="1855.50"></text></g><g><title>__rust_maybe_catch_panic (1 samples, 0.87%)</title><rect x="6.0870%" y="1829" width="0.8696%" height="15" fill="rgb(236,162,54)"/><text x="6.3370%" y="1839.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.87%)</title><rect x="6.0870%" y="1813" width="0.8696%" height="15" fill="rgb(220,229,9)"/><text x="6.3370%" y="1823.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (1 samples, 0.87%)</title><rect x="6.0870%" y="1797" width="0.8696%" height="15" fill="rgb(250,87,22)"/><text x="6.3370%" y="1807.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::_{{closure}} (1 samples, 0.87%)</title><rect x="6.0870%" y="1781" width="0.8696%" height="15" fill="rgb(239,43,17)"/><text x="6.3370%" y="1791.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1 samples, 0.87%)</title><rect x="6.0870%" y="1765" width="0.8696%" height="15" fill="rgb(231,177,25)"/><text x="6.3370%" y="1775.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="6.0870%" y="1749" width="0.8696%" height="15" fill="rgb(219,179,1)"/><text x="6.3370%" y="1759.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="6.0870%" y="1733" width="0.8696%" height="15" fill="rgb(238,219,53)"/><text x="6.3370%" y="1743.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="6.0870%" y="1717" width="0.8696%" height="15" fill="rgb(232,167,36)"/><text x="6.3370%" y="1727.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="6.0870%" y="1701" width="0.8696%" height="15" fill="rgb(244,19,51)"/><text x="6.3370%" y="1711.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="6.0870%" y="1685" width="0.8696%" height="15" fill="rgb(224,6,22)"/><text x="6.3370%" y="1695.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.87%)</title><rect x="6.0870%" y="1669" width="0.8696%" height="15" fill="rgb(224,145,5)"/><text x="6.3370%" y="1679.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.87%)</title><rect x="6.0870%" y="1653" width="0.8696%" height="15" fill="rgb(234,130,49)"/><text x="6.3370%" y="1663.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1 samples, 0.87%)</title><rect x="6.0870%" y="1637" width="0.8696%" height="15" fill="rgb(254,6,2)"/><text x="6.3370%" y="1647.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.87%)</title><rect x="6.0870%" y="1621" width="0.8696%" height="15" fill="rgb(208,96,46)"/><text x="6.3370%" y="1631.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1 samples, 0.87%)</title><rect x="6.0870%" y="1605" width="0.8696%" height="15" fill="rgb(239,3,39)"/><text x="6.3370%" y="1615.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.87%)</title><rect x="6.0870%" y="1589" width="0.8696%" height="15" fill="rgb(233,210,1)"/><text x="6.3370%" y="1599.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.87%)</title><rect x="6.0870%" y="1573" width="0.8696%" height="15" fill="rgb(244,137,37)"/><text x="6.3370%" y="1583.50"></text></g><g><title>std::panicking::try (1 samples, 0.87%)</title><rect x="6.0870%" y="1557" width="0.8696%" height="15" fill="rgb(240,136,2)"/><text x="6.3370%" y="1567.50"></text></g><g><title>__rust_maybe_catch_panic (1 samples, 0.87%)</title><rect x="6.0870%" y="1541" width="0.8696%" height="15" fill="rgb(239,18,37)"/><text x="6.3370%" y="1551.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.87%)</title><rect x="6.0870%" y="1525" width="0.8696%" height="15" fill="rgb(218,185,22)"/><text x="6.3370%" y="1535.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (1 samples, 0.87%)</title><rect x="6.0870%" y="1509" width="0.8696%" height="15" fill="rgb(225,218,4)"/><text x="6.3370%" y="1519.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::_{{closure}} (1 samples, 0.87%)</title><rect x="6.0870%" y="1493" width="0.8696%" height="15" fill="rgb(230,182,32)"/><text x="6.3370%" y="1503.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1 samples, 0.87%)</title><rect x="6.0870%" y="1477" width="0.8696%" height="15" fill="rgb(242,56,43)"/><text x="6.3370%" y="1487.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="6.0870%" y="1461" width="0.8696%" height="15" fill="rgb(233,99,24)"/><text x="6.3370%" y="1471.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="6.0870%" y="1445" width="0.8696%" height="15" fill="rgb(234,209,42)"/><text x="6.3370%" y="1455.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="6.0870%" y="1429" width="0.8696%" height="15" fill="rgb(227,7,12)"/><text x="6.3370%" y="1439.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="6.0870%" y="1413" width="0.8696%" height="15" fill="rgb(245,203,43)"/><text x="6.3370%" y="1423.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="6.0870%" y="1397" width="0.8696%" height="15" fill="rgb(238,205,33)"/><text x="6.3370%" y="1407.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.87%)</title><rect x="6.0870%" y="1381" width="0.8696%" height="15" fill="rgb(231,56,7)"/><text x="6.3370%" y="1391.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.87%)</title><rect x="6.0870%" y="1365" width="0.8696%" height="15" fill="rgb(244,186,29)"/><text x="6.3370%" y="1375.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1 samples, 0.87%)</title><rect x="6.0870%" y="1349" width="0.8696%" height="15" fill="rgb(234,111,31)"/><text x="6.3370%" y="1359.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.87%)</title><rect x="6.0870%" y="1333" width="0.8696%" height="15" fill="rgb(241,149,10)"/><text x="6.3370%" y="1343.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1 samples, 0.87%)</title><rect x="6.0870%" y="1317" width="0.8696%" height="15" fill="rgb(249,206,44)"/><text x="6.3370%" y="1327.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.87%)</title><rect x="6.0870%" y="1301" width="0.8696%" height="15" fill="rgb(251,153,30)"/><text x="6.3370%" y="1311.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.87%)</title><rect x="6.0870%" y="1285" width="0.8696%" height="15" fill="rgb(239,152,38)"/><text x="6.3370%" y="1295.50"></text></g><g><title>std::panicking::try (1 samples, 0.87%)</title><rect x="6.0870%" y="1269" width="0.8696%" height="15" fill="rgb(249,139,47)"/><text x="6.3370%" y="1279.50"></text></g><g><title>__rust_maybe_catch_panic (1 samples, 0.87%)</title><rect x="6.0870%" y="1253" width="0.8696%" height="15" fill="rgb(244,64,35)"/><text x="6.3370%" y="1263.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.87%)</title><rect x="6.0870%" y="1237" width="0.8696%" height="15" fill="rgb(216,46,15)"/><text x="6.3370%" y="1247.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (1 samples, 0.87%)</title><rect x="6.0870%" y="1221" width="0.8696%" height="15" fill="rgb(250,74,19)"/><text x="6.3370%" y="1231.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::_{{closure}} (1 samples, 0.87%)</title><rect x="6.0870%" y="1205" width="0.8696%" height="15" fill="rgb(249,42,33)"/><text x="6.3370%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1 samples, 0.87%)</title><rect x="6.0870%" y="1189" width="0.8696%" height="15" fill="rgb(242,149,17)"/><text x="6.3370%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="6.0870%" y="1173" width="0.8696%" height="15" fill="rgb(244,29,21)"/><text x="6.3370%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="6.0870%" y="1157" width="0.8696%" height="15" fill="rgb(220,130,37)"/><text x="6.3370%" y="1167.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="6.0870%" y="1141" width="0.8696%" height="15" fill="rgb(211,67,2)"/><text x="6.3370%" y="1151.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="6.0870%" y="1125" width="0.8696%" height="15" fill="rgb(235,68,52)"/><text x="6.3370%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="6.0870%" y="1109" width="0.8696%" height="15" fill="rgb(246,142,3)"/><text x="6.3370%" y="1119.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.87%)</title><rect x="6.0870%" y="1093" width="0.8696%" height="15" fill="rgb(241,25,7)"/><text x="6.3370%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.87%)</title><rect x="6.0870%" y="1077" width="0.8696%" height="15" fill="rgb(242,119,39)"/><text x="6.3370%" y="1087.50"></text></g><g><title>std::panicking::try (1 samples, 0.87%)</title><rect x="6.0870%" y="1061" width="0.8696%" height="15" fill="rgb(241,98,45)"/><text x="6.3370%" y="1071.50"></text></g><g><title>__rust_maybe_catch_panic (1 samples, 0.87%)</title><rect x="6.0870%" y="1045" width="0.8696%" height="15" fill="rgb(254,28,30)"/><text x="6.3370%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.87%)</title><rect x="6.0870%" y="1029" width="0.8696%" height="15" fill="rgb(241,142,54)"/><text x="6.3370%" y="1039.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (1 samples, 0.87%)</title><rect x="6.0870%" y="1013" width="0.8696%" height="15" fill="rgb(222,85,15)"/><text x="6.3370%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (1 samples, 0.87%)</title><rect x="6.0870%" y="997" width="0.8696%" height="15" fill="rgb(210,85,47)"/><text x="6.3370%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="6.0870%" y="981" width="0.8696%" height="15" fill="rgb(224,206,25)"/><text x="6.3370%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="6.0870%" y="965" width="0.8696%" height="15" fill="rgb(243,201,19)"/><text x="6.3370%" y="975.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="6.0870%" y="949" width="0.8696%" height="15" fill="rgb(236,59,4)"/><text x="6.3370%" y="959.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="6.0870%" y="933" width="0.8696%" height="15" fill="rgb(254,179,45)"/><text x="6.3370%" y="943.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="6.0870%" y="917" width="0.8696%" height="15" fill="rgb(226,14,10)"/><text x="6.3370%" y="927.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.87%)</title><rect x="6.0870%" y="901" width="0.8696%" height="15" fill="rgb(244,27,41)"/><text x="6.3370%" y="911.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.87%)</title><rect x="6.0870%" y="885" width="0.8696%" height="15" fill="rgb(235,35,32)"/><text x="6.3370%" y="895.50"></text></g><g><title>std::panicking::try (1 samples, 0.87%)</title><rect x="6.0870%" y="869" width="0.8696%" height="15" fill="rgb(218,68,31)"/><text x="6.3370%" y="879.50"></text></g><g><title>__rust_maybe_catch_panic (1 samples, 0.87%)</title><rect x="6.0870%" y="853" width="0.8696%" height="15" fill="rgb(207,120,37)"/><text x="6.3370%" y="863.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.87%)</title><rect x="6.0870%" y="837" width="0.8696%" height="15" fill="rgb(227,98,0)"/><text x="6.3370%" y="847.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (1 samples, 0.87%)</title><rect x="6.0870%" y="821" width="0.8696%" height="15" fill="rgb(207,7,3)"/><text x="6.3370%" y="831.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (1 samples, 0.87%)</title><rect x="6.0870%" y="805" width="0.8696%" height="15" fill="rgb(206,98,19)"/><text x="6.3370%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="6.0870%" y="789" width="0.8696%" height="15" fill="rgb(217,5,26)"/><text x="6.3370%" y="799.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="6.0870%" y="773" width="0.8696%" height="15" fill="rgb(235,190,38)"/><text x="6.3370%" y="783.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="6.0870%" y="757" width="0.8696%" height="15" fill="rgb(247,86,24)"/><text x="6.3370%" y="767.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="6.0870%" y="741" width="0.8696%" height="15" fill="rgb(205,101,16)"/><text x="6.3370%" y="751.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="6.0870%" y="725" width="0.8696%" height="15" fill="rgb(246,168,33)"/><text x="6.3370%" y="735.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.87%)</title><rect x="6.0870%" y="709" width="0.8696%" height="15" fill="rgb(231,114,1)"/><text x="6.3370%" y="719.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.87%)</title><rect x="6.0870%" y="693" width="0.8696%" height="15" fill="rgb(207,184,53)"/><text x="6.3370%" y="703.50"></text></g><g><title>std::panicking::try (1 samples, 0.87%)</title><rect x="6.0870%" y="677" width="0.8696%" height="15" fill="rgb(224,95,51)"/><text x="6.3370%" y="687.50"></text></g><g><title>__rust_maybe_catch_panic (1 samples, 0.87%)</title><rect x="6.0870%" y="661" width="0.8696%" height="15" fill="rgb(212,188,45)"/><text x="6.3370%" y="671.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.87%)</title><rect x="6.0870%" y="645" width="0.8696%" height="15" fill="rgb(223,154,38)"/><text x="6.3370%" y="655.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (1 samples, 0.87%)</title><rect x="6.0870%" y="629" width="0.8696%" height="15" fill="rgb(251,22,52)"/><text x="6.3370%" y="639.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (1 samples, 0.87%)</title><rect x="6.0870%" y="613" width="0.8696%" height="15" fill="rgb(229,209,22)"/><text x="6.3370%" y="623.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="6.0870%" y="597" width="0.8696%" height="15" fill="rgb(234,138,34)"/><text x="6.3370%" y="607.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="6.0870%" y="581" width="0.8696%" height="15" fill="rgb(212,95,11)"/><text x="6.3370%" y="591.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="6.0870%" y="565" width="0.8696%" height="15" fill="rgb(240,179,47)"/><text x="6.3370%" y="575.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="6.0870%" y="549" width="0.8696%" height="15" fill="rgb(240,163,11)"/><text x="6.3370%" y="559.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="6.0870%" y="533" width="0.8696%" height="15" fill="rgb(236,37,12)"/><text x="6.3370%" y="543.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.87%)</title><rect x="6.0870%" y="517" width="0.8696%" height="15" fill="rgb(232,164,16)"/><text x="6.3370%" y="527.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.87%)</title><rect x="6.0870%" y="501" width="0.8696%" height="15" fill="rgb(244,205,15)"/><text x="6.3370%" y="511.50"></text></g><g><title>std::panicking::try (1 samples, 0.87%)</title><rect x="6.0870%" y="485" width="0.8696%" height="15" fill="rgb(223,117,47)"/><text x="6.3370%" y="495.50"></text></g><g><title>__rust_maybe_catch_panic (1 samples, 0.87%)</title><rect x="6.0870%" y="469" width="0.8696%" height="15" fill="rgb(244,107,35)"/><text x="6.3370%" y="479.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.87%)</title><rect x="6.0870%" y="453" width="0.8696%" height="15" fill="rgb(205,140,8)"/><text x="6.3370%" y="463.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (1 samples, 0.87%)</title><rect x="6.0870%" y="437" width="0.8696%" height="15" fill="rgb(228,84,46)"/><text x="6.3370%" y="447.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (1 samples, 0.87%)</title><rect x="6.0870%" y="421" width="0.8696%" height="15" fill="rgb(254,188,9)"/><text x="6.3370%" y="431.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="6.0870%" y="405" width="0.8696%" height="15" fill="rgb(206,112,54)"/><text x="6.3370%" y="415.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="6.0870%" y="389" width="0.8696%" height="15" fill="rgb(216,84,49)"/><text x="6.3370%" y="399.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="6.0870%" y="373" width="0.8696%" height="15" fill="rgb(214,194,35)"/><text x="6.3370%" y="383.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="6.0870%" y="357" width="0.8696%" height="15" fill="rgb(249,28,3)"/><text x="6.3370%" y="367.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="6.0870%" y="341" width="0.8696%" height="15" fill="rgb(222,56,52)"/><text x="6.3370%" y="351.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.87%)</title><rect x="6.0870%" y="325" width="0.8696%" height="15" fill="rgb(245,217,50)"/><text x="6.3370%" y="335.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.87%)</title><rect x="6.0870%" y="309" width="0.8696%" height="15" fill="rgb(213,201,24)"/><text x="6.3370%" y="319.50"></text></g><g><title>std::panicking::try (1 samples, 0.87%)</title><rect x="6.0870%" y="293" width="0.8696%" height="15" fill="rgb(248,116,28)"/><text x="6.3370%" y="303.50"></text></g><g><title>__rust_maybe_catch_panic (1 samples, 0.87%)</title><rect x="6.0870%" y="277" width="0.8696%" height="15" fill="rgb(219,72,43)"/><text x="6.3370%" y="287.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.87%)</title><rect x="6.0870%" y="261" width="0.8696%" height="15" fill="rgb(209,138,14)"/><text x="6.3370%" y="271.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (1 samples, 0.87%)</title><rect x="6.0870%" y="245" width="0.8696%" height="15" fill="rgb(222,18,33)"/><text x="6.3370%" y="255.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (1 samples, 0.87%)</title><rect x="6.0870%" y="229" width="0.8696%" height="15" fill="rgb(213,199,7)"/><text x="6.3370%" y="239.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="6.0870%" y="213" width="0.8696%" height="15" fill="rgb(250,110,10)"/><text x="6.3370%" y="223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="6.0870%" y="197" width="0.8696%" height="15" fill="rgb(248,123,6)"/><text x="6.3370%" y="207.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.87%)</title><rect x="6.0870%" y="181" width="0.8696%" height="15" fill="rgb(206,91,31)"/><text x="6.3370%" y="191.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.87%)</title><rect x="6.0870%" y="165" width="0.8696%" height="15" fill="rgb(211,154,13)"/><text x="6.3370%" y="175.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.87%)</title><rect x="6.0870%" y="149" width="0.8696%" height="15" fill="rgb(225,148,7)"/><text x="6.3370%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.87%)</title><rect x="6.0870%" y="133" width="0.8696%" height="15" fill="rgb(220,160,43)"/><text x="6.3370%" y="143.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.87%)</title><rect x="6.0870%" y="117" width="0.8696%" height="15" fill="rgb(213,52,39)"/><text x="6.3370%" y="127.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.87%)</title><rect x="6.0870%" y="101" width="0.8696%" height="15" fill="rgb(243,137,7)"/><text x="6.3370%" y="111.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.87%)</title><rect x="6.0870%" y="85" width="0.8696%" height="15" fill="rgb(230,79,13)"/><text x="6.3370%" y="95.50"></text></g><g><title>&lt;noise::noise_fns::generators::perlin::Perlin as noise::noise_fns::NoiseFieldFn&lt;noise::noisefield::NoiseField2D&gt;&gt;::process_field::_{{closure}} (1 samples, 0.87%)</title><rect x="6.0870%" y="69" width="0.8696%" height="15" fill="rgb(247,105,23)"/><text x="6.3370%" y="79.50"></text></g><g><title>&lt;noise::noise_fns::generators::perlin::Perlin as noise::noise_fns::NoiseFieldFn&lt;noise::noisefield::NoiseField2D&gt;&gt;::process_field::surflet (1 samples, 0.87%)</title><rect x="6.0870%" y="53" width="0.8696%" height="15" fill="rgb(223,179,41)"/><text x="6.3370%" y="63.50"></text></g><g><title>noise::gradient::get2 (1 samples, 0.87%)</title><rect x="6.0870%" y="37" width="0.8696%" height="15" fill="rgb(218,9,34)"/><text x="6.3370%" y="47.50"></text></g><g><title>crossbeam_epoch::default::is_pinned (1 samples, 0.87%)</title><rect x="33.9130%" y="1541" width="0.8696%" height="15" fill="rgb(222,106,8)"/><text x="34.1630%" y="1551.50"></text></g><g><title>crossbeam_epoch::default::with_handle (1 samples, 0.87%)</title><rect x="33.9130%" y="1525" width="0.8696%" height="15" fill="rgb(211,220,0)"/><text x="34.1630%" y="1535.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.87%)</title><rect x="33.9130%" y="1509" width="0.8696%" height="15" fill="rgb(229,52,16)"/><text x="34.1630%" y="1519.50"></text></g><g><title>crossbeam_epoch::default::HANDLE::__getit (1 samples, 0.87%)</title><rect x="33.9130%" y="1493" width="0.8696%" height="15" fill="rgb(212,155,18)"/><text x="34.1630%" y="1503.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.87%)</title><rect x="33.9130%" y="1477" width="0.8696%" height="15" fill="rgb(242,21,14)"/><text x="34.1630%" y="1487.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.87%)</title><rect x="33.9130%" y="1461" width="0.8696%" height="15" fill="rgb(222,19,48)"/><text x="34.1630%" y="1471.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.87%)</title><rect x="33.9130%" y="1445" width="0.8696%" height="15" fill="rgb(232,45,27)"/><text x="34.1630%" y="1455.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (4 samples, 3.48%)</title><rect x="33.9130%" y="1765" width="3.4783%" height="15" fill="rgb(249,103,42)"/><text x="34.1630%" y="1775.50">cor..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold::_{{closure}} (4 samples, 3.48%)</title><rect x="33.9130%" y="1749" width="3.4783%" height="15" fill="rgb(246,81,33)"/><text x="34.1630%" y="1759.50">ray..</text></g><g><title>rayon_core::registry::WorkerThread::steal (4 samples, 3.48%)</title><rect x="33.9130%" y="1733" width="3.4783%" height="15" fill="rgb(252,33,42)"/><text x="34.1630%" y="1743.50">ray..</text></g><g><title>&lt;core::iter::adapters::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 3.48%)</title><rect x="33.9130%" y="1717" width="3.4783%" height="15" fill="rgb(209,212,41)"/><text x="34.1630%" y="1727.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (4 samples, 3.48%)</title><rect x="33.9130%" y="1701" width="3.4783%" height="15" fill="rgb(207,154,6)"/><text x="34.1630%" y="1711.50">cor..</text></g><g><title>&lt;core::iter::adapters::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 3.48%)</title><rect x="33.9130%" y="1685" width="3.4783%" height="15" fill="rgb(223,64,47)"/><text x="34.1630%" y="1695.50">&lt;co..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 3.48%)</title><rect x="33.9130%" y="1669" width="3.4783%" height="15" fill="rgb(211,161,38)"/><text x="34.1630%" y="1679.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 3.48%)</title><rect x="33.9130%" y="1653" width="3.4783%" height="15" fill="rgb(219,138,40)"/><text x="34.1630%" y="1663.50">cor..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 3.48%)</title><rect x="33.9130%" y="1637" width="3.4783%" height="15" fill="rgb(241,228,46)"/><text x="34.1630%" y="1647.50">cor..</text></g><g><title>core::iter::adapters::filter_try_fold::_{{closure}} (4 samples, 3.48%)</title><rect x="33.9130%" y="1621" width="3.4783%" height="15" fill="rgb(223,209,38)"/><text x="34.1630%" y="1631.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (4 samples, 3.48%)</title><rect x="33.9130%" y="1605" width="3.4783%" height="15" fill="rgb(236,164,45)"/><text x="34.1630%" y="1615.50">cor..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 3.48%)</title><rect x="33.9130%" y="1589" width="3.4783%" height="15" fill="rgb(231,15,5)"/><text x="34.1630%" y="1599.50">cor..</text></g><g><title>rayon_core::registry::WorkerThread::steal::_{{closure}} (4 samples, 3.48%)</title><rect x="33.9130%" y="1573" width="3.4783%" height="15" fill="rgb(252,35,15)"/><text x="34.1630%" y="1583.50">ray..</text></g><g><title>crossbeam_deque::Stealer&lt;T&gt;::steal (4 samples, 3.48%)</title><rect x="33.9130%" y="1557" width="3.4783%" height="15" fill="rgb(248,181,18)"/><text x="34.1630%" y="1567.50">cro..</text></g><g><title>crossbeam_epoch::default::pin (3 samples, 2.61%)</title><rect x="34.7826%" y="1541" width="2.6087%" height="15" fill="rgb(233,39,42)"/><text x="35.0326%" y="1551.50">cr..</text></g><g><title>crossbeam_epoch::default::with_handle (3 samples, 2.61%)</title><rect x="34.7826%" y="1525" width="2.6087%" height="15" fill="rgb(238,110,33)"/><text x="35.0326%" y="1535.50">cr..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 2.61%)</title><rect x="34.7826%" y="1509" width="2.6087%" height="15" fill="rgb(233,195,10)"/><text x="35.0326%" y="1519.50">st..</text></g><g><title>crossbeam_epoch::default::with_handle::_{{closure}} (3 samples, 2.61%)</title><rect x="34.7826%" y="1493" width="2.6087%" height="15" fill="rgb(254,105,3)"/><text x="35.0326%" y="1503.50">cr..</text></g><g><title>crossbeam_epoch::default::pin::_{{closure}} (3 samples, 2.61%)</title><rect x="34.7826%" y="1477" width="2.6087%" height="15" fill="rgb(221,225,9)"/><text x="35.0326%" y="1487.50">cr..</text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (3 samples, 2.61%)</title><rect x="34.7826%" y="1461" width="2.6087%" height="15" fill="rgb(224,227,45)"/><text x="35.0326%" y="1471.50">cr..</text></g><g><title>crossbeam_epoch::internal::Local::pin (3 samples, 2.61%)</title><rect x="34.7826%" y="1445" width="2.6087%" height="15" fill="rgb(229,198,43)"/><text x="35.0326%" y="1455.50">cr..</text></g><g><title>crossbeam_epoch::epoch::AtomicEpoch::compare_and_swap (3 samples, 2.61%)</title><rect x="34.7826%" y="1429" width="2.6087%" height="15" fill="rgb(206,209,35)"/><text x="35.0326%" y="1439.50">cr..</text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (3 samples, 2.61%)</title><rect x="34.7826%" y="1413" width="2.6087%" height="15" fill="rgb(245,195,53)"/><text x="35.0326%" y="1423.50">co..</text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (3 samples, 2.61%)</title><rect x="34.7826%" y="1397" width="2.6087%" height="15" fill="rgb(240,92,26)"/><text x="35.0326%" y="1407.50">co..</text></g><g><title>core::sync::atomic::atomic_compare_exchange (3 samples, 2.61%)</title><rect x="34.7826%" y="1381" width="2.6087%" height="15" fill="rgb(207,40,23)"/><text x="35.0326%" y="1391.50">co..</text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.87%)</title><rect x="37.3913%" y="1093" width="0.8696%" height="15" fill="rgb(223,111,35)"/><text x="37.6413%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1 samples, 0.87%)</title><rect x="37.3913%" y="1077" width="0.8696%" height="15" fill="rgb(229,147,28)"/><text x="37.6413%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="37.3913%" y="1061" width="0.8696%" height="15" fill="rgb(211,29,28)"/><text x="37.6413%" y="1071.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="37.3913%" y="1045" width="0.8696%" height="15" fill="rgb(228,72,33)"/><text x="37.6413%" y="1055.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="37.3913%" y="1029" width="0.8696%" height="15" fill="rgb(205,214,31)"/><text x="37.6413%" y="1039.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="37.3913%" y="1013" width="0.8696%" height="15" fill="rgb(224,111,15)"/><text x="37.6413%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="37.3913%" y="997" width="0.8696%" height="15" fill="rgb(253,21,26)"/><text x="37.6413%" y="1007.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.87%)</title><rect x="37.3913%" y="981" width="0.8696%" height="15" fill="rgb(245,139,43)"/><text x="37.6413%" y="991.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.87%)</title><rect x="37.3913%" y="965" width="0.8696%" height="15" fill="rgb(252,170,7)"/><text x="37.6413%" y="975.50"></text></g><g><title>std::panicking::try (1 samples, 0.87%)</title><rect x="37.3913%" y="949" width="0.8696%" height="15" fill="rgb(231,118,14)"/><text x="37.6413%" y="959.50"></text></g><g><title>__rust_maybe_catch_panic (1 samples, 0.87%)</title><rect x="37.3913%" y="933" width="0.8696%" height="15" fill="rgb(238,83,0)"/><text x="37.6413%" y="943.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.87%)</title><rect x="37.3913%" y="917" width="0.8696%" height="15" fill="rgb(221,39,39)"/><text x="37.6413%" y="927.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (1 samples, 0.87%)</title><rect x="37.3913%" y="901" width="0.8696%" height="15" fill="rgb(222,119,46)"/><text x="37.6413%" y="911.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (1 samples, 0.87%)</title><rect x="37.3913%" y="885" width="0.8696%" height="15" fill="rgb(222,165,49)"/><text x="37.6413%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="37.3913%" y="869" width="0.8696%" height="15" fill="rgb(219,113,52)"/><text x="37.6413%" y="879.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="37.3913%" y="853" width="0.8696%" height="15" fill="rgb(214,7,15)"/><text x="37.6413%" y="863.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.87%)</title><rect x="37.3913%" y="837" width="0.8696%" height="15" fill="rgb(235,32,4)"/><text x="37.6413%" y="847.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.87%)</title><rect x="37.3913%" y="821" width="0.8696%" height="15" fill="rgb(238,90,54)"/><text x="37.6413%" y="831.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.87%)</title><rect x="37.3913%" y="805" width="0.8696%" height="15" fill="rgb(213,208,19)"/><text x="37.6413%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.87%)</title><rect x="37.3913%" y="789" width="0.8696%" height="15" fill="rgb(233,156,4)"/><text x="37.6413%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.87%)</title><rect x="37.3913%" y="773" width="0.8696%" height="15" fill="rgb(207,194,5)"/><text x="37.6413%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.87%)</title><rect x="37.3913%" y="757" width="0.8696%" height="15" fill="rgb(206,111,30)"/><text x="37.6413%" y="767.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.87%)</title><rect x="37.3913%" y="741" width="0.8696%" height="15" fill="rgb(243,70,54)"/><text x="37.6413%" y="751.50"></text></g><g><title>&lt;noise::noise_fns::generators::perlin::Perlin as noise::noise_fns::NoiseFieldFn&lt;noise::noisefield::NoiseField2D&gt;&gt;::process_field::_{{closure}} (1 samples, 0.87%)</title><rect x="37.3913%" y="725" width="0.8696%" height="15" fill="rgb(242,28,8)"/><text x="37.6413%" y="735.50"></text></g><g><title>&lt;noise::noise_fns::generators::perlin::Perlin as noise::noise_fns::NoiseFieldFn&lt;noise::noisefield::NoiseField2D&gt;&gt;::process_field::surflet (1 samples, 0.87%)</title><rect x="37.3913%" y="709" width="0.8696%" height="15" fill="rgb(219,106,18)"/><text x="37.6413%" y="719.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 1.74%)</title><rect x="37.3913%" y="1509" width="1.7391%" height="15" fill="rgb(244,222,10)"/><text x="37.6413%" y="1519.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (2 samples, 1.74%)</title><rect x="37.3913%" y="1493" width="1.7391%" height="15" fill="rgb(236,179,52)"/><text x="37.6413%" y="1503.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 1.74%)</title><rect x="37.3913%" y="1477" width="1.7391%" height="15" fill="rgb(213,23,39)"/><text x="37.6413%" y="1487.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 1.74%)</title><rect x="37.3913%" y="1461" width="1.7391%" height="15" fill="rgb(238,48,10)"/><text x="37.6413%" y="1471.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 1.74%)</title><rect x="37.3913%" y="1445" width="1.7391%" height="15" fill="rgb(251,196,23)"/><text x="37.6413%" y="1455.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 1.74%)</title><rect x="37.3913%" y="1429" width="1.7391%" height="15" fill="rgb(250,152,24)"/><text x="37.6413%" y="1439.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (2 samples, 1.74%)</title><rect x="37.3913%" y="1413" width="1.7391%" height="15" fill="rgb(209,150,17)"/><text x="37.6413%" y="1423.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (2 samples, 1.74%)</title><rect x="37.3913%" y="1397" width="1.7391%" height="15" fill="rgb(234,202,34)"/><text x="37.6413%" y="1407.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 1.74%)</title><rect x="37.3913%" y="1381" width="1.7391%" height="15" fill="rgb(253,148,53)"/><text x="37.6413%" y="1391.50"></text></g><g><title>std::panicking::try (2 samples, 1.74%)</title><rect x="37.3913%" y="1365" width="1.7391%" height="15" fill="rgb(218,129,16)"/><text x="37.6413%" y="1375.50"></text></g><g><title>__rust_maybe_catch_panic (2 samples, 1.74%)</title><rect x="37.3913%" y="1349" width="1.7391%" height="15" fill="rgb(216,85,19)"/><text x="37.6413%" y="1359.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 1.74%)</title><rect x="37.3913%" y="1333" width="1.7391%" height="15" fill="rgb(235,228,7)"/><text x="37.6413%" y="1343.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (2 samples, 1.74%)</title><rect x="37.3913%" y="1317" width="1.7391%" height="15" fill="rgb(245,175,0)"/><text x="37.6413%" y="1327.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (2 samples, 1.74%)</title><rect x="37.3913%" y="1301" width="1.7391%" height="15" fill="rgb(208,168,36)"/><text x="37.6413%" y="1311.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 1.74%)</title><rect x="37.3913%" y="1285" width="1.7391%" height="15" fill="rgb(246,171,24)"/><text x="37.6413%" y="1295.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 1.74%)</title><rect x="37.3913%" y="1269" width="1.7391%" height="15" fill="rgb(215,142,24)"/><text x="37.6413%" y="1279.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 1.74%)</title><rect x="37.3913%" y="1253" width="1.7391%" height="15" fill="rgb(250,187,7)"/><text x="37.6413%" y="1263.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 1.74%)</title><rect x="37.3913%" y="1237" width="1.7391%" height="15" fill="rgb(228,66,33)"/><text x="37.6413%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (2 samples, 1.74%)</title><rect x="37.3913%" y="1221" width="1.7391%" height="15" fill="rgb(234,215,21)"/><text x="37.6413%" y="1231.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 1.74%)</title><rect x="37.3913%" y="1205" width="1.7391%" height="15" fill="rgb(222,191,20)"/><text x="37.6413%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (2 samples, 1.74%)</title><rect x="37.3913%" y="1189" width="1.7391%" height="15" fill="rgb(245,79,54)"/><text x="37.6413%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 1.74%)</title><rect x="37.3913%" y="1173" width="1.7391%" height="15" fill="rgb(240,10,37)"/><text x="37.6413%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 1.74%)</title><rect x="37.3913%" y="1157" width="1.7391%" height="15" fill="rgb(214,192,32)"/><text x="37.6413%" y="1167.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 1.74%)</title><rect x="37.3913%" y="1141" width="1.7391%" height="15" fill="rgb(209,36,54)"/><text x="37.6413%" y="1151.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 1.74%)</title><rect x="37.3913%" y="1125" width="1.7391%" height="15" fill="rgb(220,10,11)"/><text x="37.6413%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (2 samples, 1.74%)</title><rect x="37.3913%" y="1109" width="1.7391%" height="15" fill="rgb(221,106,17)"/><text x="37.6413%" y="1119.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.87%)</title><rect x="38.2609%" y="1093" width="0.8696%" height="15" fill="rgb(251,142,44)"/><text x="38.5109%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.87%)</title><rect x="38.2609%" y="1077" width="0.8696%" height="15" fill="rgb(238,13,15)"/><text x="38.5109%" y="1087.50"></text></g><g><title>std::panicking::try (1 samples, 0.87%)</title><rect x="38.2609%" y="1061" width="0.8696%" height="15" fill="rgb(208,107,27)"/><text x="38.5109%" y="1071.50"></text></g><g><title>__rust_maybe_catch_panic (1 samples, 0.87%)</title><rect x="38.2609%" y="1045" width="0.8696%" height="15" fill="rgb(205,136,37)"/><text x="38.5109%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.87%)</title><rect x="38.2609%" y="1029" width="0.8696%" height="15" fill="rgb(250,205,27)"/><text x="38.5109%" y="1039.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (1 samples, 0.87%)</title><rect x="38.2609%" y="1013" width="0.8696%" height="15" fill="rgb(210,80,43)"/><text x="38.5109%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (1 samples, 0.87%)</title><rect x="38.2609%" y="997" width="0.8696%" height="15" fill="rgb(247,160,36)"/><text x="38.5109%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="38.2609%" y="981" width="0.8696%" height="15" fill="rgb(234,13,49)"/><text x="38.5109%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="38.2609%" y="965" width="0.8696%" height="15" fill="rgb(234,122,0)"/><text x="38.5109%" y="975.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="38.2609%" y="949" width="0.8696%" height="15" fill="rgb(207,146,38)"/><text x="38.5109%" y="959.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="38.2609%" y="933" width="0.8696%" height="15" fill="rgb(207,177,25)"/><text x="38.5109%" y="943.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="38.2609%" y="917" width="0.8696%" height="15" fill="rgb(211,178,42)"/><text x="38.5109%" y="927.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.87%)</title><rect x="38.2609%" y="901" width="0.8696%" height="15" fill="rgb(230,69,54)"/><text x="38.5109%" y="911.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1 samples, 0.87%)</title><rect x="38.2609%" y="885" width="0.8696%" height="15" fill="rgb(214,135,41)"/><text x="38.5109%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="38.2609%" y="869" width="0.8696%" height="15" fill="rgb(237,67,25)"/><text x="38.5109%" y="879.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="38.2609%" y="853" width="0.8696%" height="15" fill="rgb(222,189,50)"/><text x="38.5109%" y="863.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.87%)</title><rect x="38.2609%" y="837" width="0.8696%" height="15" fill="rgb(245,148,34)"/><text x="38.5109%" y="847.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.87%)</title><rect x="38.2609%" y="821" width="0.8696%" height="15" fill="rgb(222,29,6)"/><text x="38.5109%" y="831.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.87%)</title><rect x="38.2609%" y="805" width="0.8696%" height="15" fill="rgb(221,189,43)"/><text x="38.5109%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.87%)</title><rect x="38.2609%" y="789" width="0.8696%" height="15" fill="rgb(207,36,27)"/><text x="38.5109%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.87%)</title><rect x="38.2609%" y="773" width="0.8696%" height="15" fill="rgb(217,90,24)"/><text x="38.5109%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.87%)</title><rect x="38.2609%" y="757" width="0.8696%" height="15" fill="rgb(224,66,35)"/><text x="38.5109%" y="767.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.87%)</title><rect x="38.2609%" y="741" width="0.8696%" height="15" fill="rgb(221,13,50)"/><text x="38.5109%" y="751.50"></text></g><g><title>&lt;noise::noise_fns::generators::perlin::Perlin as noise::noise_fns::NoiseFieldFn&lt;noise::noisefield::NoiseField2D&gt;&gt;::process_field::_{{closure}} (1 samples, 0.87%)</title><rect x="38.2609%" y="725" width="0.8696%" height="15" fill="rgb(236,68,49)"/><text x="38.5109%" y="735.50"></text></g><g><title>&lt;noise::noise_fns::generators::perlin::Perlin as noise::noise_fns::NoiseFieldFn&lt;noise::noisefield::NoiseField2D&gt;&gt;::process_field::surflet (1 samples, 0.87%)</title><rect x="38.2609%" y="709" width="0.8696%" height="15" fill="rgb(229,146,28)"/><text x="38.5109%" y="719.50"></text></g><g><title>noise::gradient::get2 (1 samples, 0.87%)</title><rect x="38.2609%" y="693" width="0.8696%" height="15" fill="rgb(225,31,38)"/><text x="38.5109%" y="703.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (1 samples, 0.87%)</title><rect x="39.1304%" y="1509" width="0.8696%" height="15" fill="rgb(250,208,3)"/><text x="39.3804%" y="1519.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (1 samples, 0.87%)</title><rect x="39.1304%" y="1493" width="0.8696%" height="15" fill="rgb(246,54,23)"/><text x="39.3804%" y="1503.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (1 samples, 0.87%)</title><rect x="39.1304%" y="1477" width="0.8696%" height="15" fill="rgb(243,76,11)"/><text x="39.3804%" y="1487.50"></text></g><g><title>rayon_core::job::JobRef::execute (1 samples, 0.87%)</title><rect x="39.1304%" y="1461" width="0.8696%" height="15" fill="rgb(245,21,50)"/><text x="39.3804%" y="1471.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (1 samples, 0.87%)</title><rect x="39.1304%" y="1445" width="0.8696%" height="15" fill="rgb(228,9,43)"/><text x="39.3804%" y="1455.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.87%)</title><rect x="39.1304%" y="1429" width="0.8696%" height="15" fill="rgb(208,100,47)"/><text x="39.3804%" y="1439.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.87%)</title><rect x="39.1304%" y="1413" width="0.8696%" height="15" fill="rgb(232,26,8)"/><text x="39.3804%" y="1423.50"></text></g><g><title>std::panicking::try (1 samples, 0.87%)</title><rect x="39.1304%" y="1397" width="0.8696%" height="15" fill="rgb(216,166,38)"/><text x="39.3804%" y="1407.50"></text></g><g><title>__rust_maybe_catch_panic (1 samples, 0.87%)</title><rect x="39.1304%" y="1381" width="0.8696%" height="15" fill="rgb(251,202,51)"/><text x="39.3804%" y="1391.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.87%)</title><rect x="39.1304%" y="1365" width="0.8696%" height="15" fill="rgb(254,216,34)"/><text x="39.3804%" y="1375.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (1 samples, 0.87%)</title><rect x="39.1304%" y="1349" width="0.8696%" height="15" fill="rgb(251,32,27)"/><text x="39.3804%" y="1359.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::_{{closure}} (1 samples, 0.87%)</title><rect x="39.1304%" y="1333" width="0.8696%" height="15" fill="rgb(208,127,28)"/><text x="39.3804%" y="1343.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1 samples, 0.87%)</title><rect x="39.1304%" y="1317" width="0.8696%" height="15" fill="rgb(224,137,22)"/><text x="39.3804%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="39.1304%" y="1301" width="0.8696%" height="15" fill="rgb(254,70,32)"/><text x="39.3804%" y="1311.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="39.1304%" y="1285" width="0.8696%" height="15" fill="rgb(229,75,37)"/><text x="39.3804%" y="1295.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="39.1304%" y="1269" width="0.8696%" height="15" fill="rgb(252,64,23)"/><text x="39.3804%" y="1279.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="39.1304%" y="1253" width="0.8696%" height="15" fill="rgb(232,162,48)"/><text x="39.3804%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="39.1304%" y="1237" width="0.8696%" height="15" fill="rgb(246,160,12)"/><text x="39.3804%" y="1247.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.87%)</title><rect x="39.1304%" y="1221" width="0.8696%" height="15" fill="rgb(247,166,0)"/><text x="39.3804%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1 samples, 0.87%)</title><rect x="39.1304%" y="1205" width="0.8696%" height="15" fill="rgb(249,219,21)"/><text x="39.3804%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="39.1304%" y="1189" width="0.8696%" height="15" fill="rgb(205,209,3)"/><text x="39.3804%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="39.1304%" y="1173" width="0.8696%" height="15" fill="rgb(243,44,1)"/><text x="39.3804%" y="1183.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="39.1304%" y="1157" width="0.8696%" height="15" fill="rgb(206,159,16)"/><text x="39.3804%" y="1167.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="39.1304%" y="1141" width="0.8696%" height="15" fill="rgb(244,77,30)"/><text x="39.3804%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="39.1304%" y="1125" width="0.8696%" height="15" fill="rgb(218,69,12)"/><text x="39.3804%" y="1135.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.87%)</title><rect x="39.1304%" y="1109" width="0.8696%" height="15" fill="rgb(212,87,7)"/><text x="39.3804%" y="1119.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.87%)</title><rect x="39.1304%" y="1093" width="0.8696%" height="15" fill="rgb(245,114,25)"/><text x="39.3804%" y="1103.50"></text></g><g><title>std::panicking::try (1 samples, 0.87%)</title><rect x="39.1304%" y="1077" width="0.8696%" height="15" fill="rgb(210,61,42)"/><text x="39.3804%" y="1087.50"></text></g><g><title>__rust_maybe_catch_panic (1 samples, 0.87%)</title><rect x="39.1304%" y="1061" width="0.8696%" height="15" fill="rgb(211,52,33)"/><text x="39.3804%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.87%)</title><rect x="39.1304%" y="1045" width="0.8696%" height="15" fill="rgb(234,58,33)"/><text x="39.3804%" y="1055.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (1 samples, 0.87%)</title><rect x="39.1304%" y="1029" width="0.8696%" height="15" fill="rgb(220,115,36)"/><text x="39.3804%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (1 samples, 0.87%)</title><rect x="39.1304%" y="1013" width="0.8696%" height="15" fill="rgb(243,153,54)"/><text x="39.3804%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="39.1304%" y="997" width="0.8696%" height="15" fill="rgb(251,47,18)"/><text x="39.3804%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="39.1304%" y="981" width="0.8696%" height="15" fill="rgb(242,102,42)"/><text x="39.3804%" y="991.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="39.1304%" y="965" width="0.8696%" height="15" fill="rgb(234,31,38)"/><text x="39.3804%" y="975.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="39.1304%" y="949" width="0.8696%" height="15" fill="rgb(221,117,51)"/><text x="39.3804%" y="959.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="39.1304%" y="933" width="0.8696%" height="15" fill="rgb(212,20,18)"/><text x="39.3804%" y="943.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.87%)</title><rect x="39.1304%" y="917" width="0.8696%" height="15" fill="rgb(245,133,36)"/><text x="39.3804%" y="927.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1 samples, 0.87%)</title><rect x="39.1304%" y="901" width="0.8696%" height="15" fill="rgb(212,6,19)"/><text x="39.3804%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="39.1304%" y="885" width="0.8696%" height="15" fill="rgb(218,1,36)"/><text x="39.3804%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="39.1304%" y="869" width="0.8696%" height="15" fill="rgb(246,84,54)"/><text x="39.3804%" y="879.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="39.1304%" y="853" width="0.8696%" height="15" fill="rgb(242,110,6)"/><text x="39.3804%" y="863.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="39.1304%" y="837" width="0.8696%" height="15" fill="rgb(214,47,5)"/><text x="39.3804%" y="847.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="39.1304%" y="821" width="0.8696%" height="15" fill="rgb(218,159,25)"/><text x="39.3804%" y="831.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.87%)</title><rect x="39.1304%" y="805" width="0.8696%" height="15" fill="rgb(215,211,28)"/><text x="39.3804%" y="815.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.87%)</title><rect x="39.1304%" y="789" width="0.8696%" height="15" fill="rgb(238,59,32)"/><text x="39.3804%" y="799.50"></text></g><g><title>std::panicking::try (1 samples, 0.87%)</title><rect x="39.1304%" y="773" width="0.8696%" height="15" fill="rgb(226,82,3)"/><text x="39.3804%" y="783.50"></text></g><g><title>__rust_maybe_catch_panic (1 samples, 0.87%)</title><rect x="39.1304%" y="757" width="0.8696%" height="15" fill="rgb(240,164,32)"/><text x="39.3804%" y="767.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.87%)</title><rect x="39.1304%" y="741" width="0.8696%" height="15" fill="rgb(232,46,7)"/><text x="39.3804%" y="751.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (1 samples, 0.87%)</title><rect x="39.1304%" y="725" width="0.8696%" height="15" fill="rgb(229,129,53)"/><text x="39.3804%" y="735.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (1 samples, 0.87%)</title><rect x="39.1304%" y="709" width="0.8696%" height="15" fill="rgb(234,188,29)"/><text x="39.3804%" y="719.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="39.1304%" y="693" width="0.8696%" height="15" fill="rgb(246,141,4)"/><text x="39.3804%" y="703.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="39.1304%" y="677" width="0.8696%" height="15" fill="rgb(229,23,39)"/><text x="39.3804%" y="687.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="39.1304%" y="661" width="0.8696%" height="15" fill="rgb(206,12,3)"/><text x="39.3804%" y="671.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="39.1304%" y="645" width="0.8696%" height="15" fill="rgb(252,226,20)"/><text x="39.3804%" y="655.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="39.1304%" y="629" width="0.8696%" height="15" fill="rgb(216,123,35)"/><text x="39.3804%" y="639.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.87%)</title><rect x="39.1304%" y="613" width="0.8696%" height="15" fill="rgb(212,68,40)"/><text x="39.3804%" y="623.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.87%)</title><rect x="39.1304%" y="597" width="0.8696%" height="15" fill="rgb(254,125,32)"/><text x="39.3804%" y="607.50"></text></g><g><title>std::panicking::try (1 samples, 0.87%)</title><rect x="39.1304%" y="581" width="0.8696%" height="15" fill="rgb(253,97,22)"/><text x="39.3804%" y="591.50"></text></g><g><title>__rust_maybe_catch_panic (1 samples, 0.87%)</title><rect x="39.1304%" y="565" width="0.8696%" height="15" fill="rgb(241,101,14)"/><text x="39.3804%" y="575.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.87%)</title><rect x="39.1304%" y="549" width="0.8696%" height="15" fill="rgb(238,103,29)"/><text x="39.3804%" y="559.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (1 samples, 0.87%)</title><rect x="39.1304%" y="533" width="0.8696%" height="15" fill="rgb(233,195,47)"/><text x="39.3804%" y="543.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (1 samples, 0.87%)</title><rect x="39.1304%" y="517" width="0.8696%" height="15" fill="rgb(246,218,30)"/><text x="39.3804%" y="527.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="39.1304%" y="501" width="0.8696%" height="15" fill="rgb(219,145,47)"/><text x="39.3804%" y="511.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="39.1304%" y="485" width="0.8696%" height="15" fill="rgb(243,12,26)"/><text x="39.3804%" y="495.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.87%)</title><rect x="39.1304%" y="469" width="0.8696%" height="15" fill="rgb(214,87,16)"/><text x="39.3804%" y="479.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.87%)</title><rect x="39.1304%" y="453" width="0.8696%" height="15" fill="rgb(208,99,42)"/><text x="39.3804%" y="463.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.87%)</title><rect x="39.1304%" y="437" width="0.8696%" height="15" fill="rgb(253,99,2)"/><text x="39.3804%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.87%)</title><rect x="39.1304%" y="421" width="0.8696%" height="15" fill="rgb(220,168,23)"/><text x="39.3804%" y="431.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.87%)</title><rect x="39.1304%" y="405" width="0.8696%" height="15" fill="rgb(242,38,24)"/><text x="39.3804%" y="415.50"></text></g><g><title>core::slice::Iter&lt;T&gt;::post_inc_start (1 samples, 0.87%)</title><rect x="39.1304%" y="389" width="0.8696%" height="15" fill="rgb(225,182,9)"/><text x="39.3804%" y="399.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.87%)</title><rect x="40.0000%" y="1317" width="0.8696%" height="15" fill="rgb(243,178,37)"/><text x="40.2500%" y="1327.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1 samples, 0.87%)</title><rect x="40.0000%" y="1301" width="0.8696%" height="15" fill="rgb(232,139,19)"/><text x="40.2500%" y="1311.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="40.0000%" y="1285" width="0.8696%" height="15" fill="rgb(225,201,24)"/><text x="40.2500%" y="1295.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="40.0000%" y="1269" width="0.8696%" height="15" fill="rgb(221,47,46)"/><text x="40.2500%" y="1279.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="40.0000%" y="1253" width="0.8696%" height="15" fill="rgb(249,23,13)"/><text x="40.2500%" y="1263.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="40.0000%" y="1237" width="0.8696%" height="15" fill="rgb(219,9,5)"/><text x="40.2500%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="40.0000%" y="1221" width="0.8696%" height="15" fill="rgb(254,171,16)"/><text x="40.2500%" y="1231.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.87%)</title><rect x="40.0000%" y="1205" width="0.8696%" height="15" fill="rgb(230,171,20)"/><text x="40.2500%" y="1215.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.87%)</title><rect x="40.0000%" y="1189" width="0.8696%" height="15" fill="rgb(210,71,41)"/><text x="40.2500%" y="1199.50"></text></g><g><title>std::panicking::try (1 samples, 0.87%)</title><rect x="40.0000%" y="1173" width="0.8696%" height="15" fill="rgb(206,173,20)"/><text x="40.2500%" y="1183.50"></text></g><g><title>__rust_maybe_catch_panic (1 samples, 0.87%)</title><rect x="40.0000%" y="1157" width="0.8696%" height="15" fill="rgb(233,88,34)"/><text x="40.2500%" y="1167.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.87%)</title><rect x="40.0000%" y="1141" width="0.8696%" height="15" fill="rgb(223,209,46)"/><text x="40.2500%" y="1151.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (1 samples, 0.87%)</title><rect x="40.0000%" y="1125" width="0.8696%" height="15" fill="rgb(250,43,18)"/><text x="40.2500%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (1 samples, 0.87%)</title><rect x="40.0000%" y="1109" width="0.8696%" height="15" fill="rgb(208,13,10)"/><text x="40.2500%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="40.0000%" y="1093" width="0.8696%" height="15" fill="rgb(212,200,36)"/><text x="40.2500%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="40.0000%" y="1077" width="0.8696%" height="15" fill="rgb(225,90,30)"/><text x="40.2500%" y="1087.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="40.0000%" y="1061" width="0.8696%" height="15" fill="rgb(236,182,39)"/><text x="40.2500%" y="1071.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="40.0000%" y="1045" width="0.8696%" height="15" fill="rgb(212,144,35)"/><text x="40.2500%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="40.0000%" y="1029" width="0.8696%" height="15" fill="rgb(228,63,44)"/><text x="40.2500%" y="1039.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.87%)</title><rect x="40.0000%" y="1013" width="0.8696%" height="15" fill="rgb(228,109,6)"/><text x="40.2500%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1 samples, 0.87%)</title><rect x="40.0000%" y="997" width="0.8696%" height="15" fill="rgb(238,117,24)"/><text x="40.2500%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="40.0000%" y="981" width="0.8696%" height="15" fill="rgb(242,26,26)"/><text x="40.2500%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="40.0000%" y="965" width="0.8696%" height="15" fill="rgb(221,92,48)"/><text x="40.2500%" y="975.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="40.0000%" y="949" width="0.8696%" height="15" fill="rgb(209,209,32)"/><text x="40.2500%" y="959.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="40.0000%" y="933" width="0.8696%" height="15" fill="rgb(221,70,22)"/><text x="40.2500%" y="943.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="40.0000%" y="917" width="0.8696%" height="15" fill="rgb(248,145,5)"/><text x="40.2500%" y="927.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.87%)</title><rect x="40.0000%" y="901" width="0.8696%" height="15" fill="rgb(226,116,26)"/><text x="40.2500%" y="911.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.87%)</title><rect x="40.0000%" y="885" width="0.8696%" height="15" fill="rgb(244,5,17)"/><text x="40.2500%" y="895.50"></text></g><g><title>std::panicking::try (1 samples, 0.87%)</title><rect x="40.0000%" y="869" width="0.8696%" height="15" fill="rgb(252,159,33)"/><text x="40.2500%" y="879.50"></text></g><g><title>__rust_maybe_catch_panic (1 samples, 0.87%)</title><rect x="40.0000%" y="853" width="0.8696%" height="15" fill="rgb(206,71,0)"/><text x="40.2500%" y="863.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.87%)</title><rect x="40.0000%" y="837" width="0.8696%" height="15" fill="rgb(233,118,54)"/><text x="40.2500%" y="847.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (1 samples, 0.87%)</title><rect x="40.0000%" y="821" width="0.8696%" height="15" fill="rgb(234,83,48)"/><text x="40.2500%" y="831.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (1 samples, 0.87%)</title><rect x="40.0000%" y="805" width="0.8696%" height="15" fill="rgb(228,3,54)"/><text x="40.2500%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="40.0000%" y="789" width="0.8696%" height="15" fill="rgb(226,155,13)"/><text x="40.2500%" y="799.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="40.0000%" y="773" width="0.8696%" height="15" fill="rgb(241,28,37)"/><text x="40.2500%" y="783.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.87%)</title><rect x="40.0000%" y="757" width="0.8696%" height="15" fill="rgb(233,93,10)"/><text x="40.2500%" y="767.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.87%)</title><rect x="40.0000%" y="741" width="0.8696%" height="15" fill="rgb(225,113,19)"/><text x="40.2500%" y="751.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.87%)</title><rect x="40.0000%" y="725" width="0.8696%" height="15" fill="rgb(241,2,18)"/><text x="40.2500%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.87%)</title><rect x="40.0000%" y="709" width="0.8696%" height="15" fill="rgb(228,207,21)"/><text x="40.2500%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.87%)</title><rect x="40.0000%" y="693" width="0.8696%" height="15" fill="rgb(213,211,35)"/><text x="40.2500%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.87%)</title><rect x="40.0000%" y="677" width="0.8696%" height="15" fill="rgb(209,83,10)"/><text x="40.2500%" y="687.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.87%)</title><rect x="40.0000%" y="661" width="0.8696%" height="15" fill="rgb(209,164,1)"/><text x="40.2500%" y="671.50"></text></g><g><title>&lt;noise::noise_fns::generators::perlin::Perlin as noise::noise_fns::NoiseFieldFn&lt;noise::noisefield::NoiseField2D&gt;&gt;::process_field::_{{closure}} (1 samples, 0.87%)</title><rect x="40.0000%" y="645" width="0.8696%" height="15" fill="rgb(213,184,43)"/><text x="40.2500%" y="655.50"></text></g><g><title>noise::math::map2 (1 samples, 0.87%)</title><rect x="40.0000%" y="629" width="0.8696%" height="15" fill="rgb(231,61,34)"/><text x="40.2500%" y="639.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.87%)</title><rect x="40.0000%" y="613" width="0.8696%" height="15" fill="rgb(235,75,3)"/><text x="40.2500%" y="623.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::floor (1 samples, 0.87%)</title><rect x="40.0000%" y="597" width="0.8696%" height="15" fill="rgb(220,106,47)"/><text x="40.2500%" y="607.50"></text></g><g><title>[libm-2.31.so] (1 samples, 0.87%)</title><rect x="40.0000%" y="581" width="0.8696%" height="15" fill="rgb(210,196,33)"/><text x="40.2500%" y="591.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.87%)</title><rect x="40.8696%" y="1013" width="0.8696%" height="15" fill="rgb(229,154,42)"/><text x="41.1196%" y="1023.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1 samples, 0.87%)</title><rect x="40.8696%" y="997" width="0.8696%" height="15" fill="rgb(228,114,26)"/><text x="41.1196%" y="1007.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="40.8696%" y="981" width="0.8696%" height="15" fill="rgb(208,144,1)"/><text x="41.1196%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="40.8696%" y="965" width="0.8696%" height="15" fill="rgb(239,112,37)"/><text x="41.1196%" y="975.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="40.8696%" y="949" width="0.8696%" height="15" fill="rgb(210,96,50)"/><text x="41.1196%" y="959.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="40.8696%" y="933" width="0.8696%" height="15" fill="rgb(222,178,2)"/><text x="41.1196%" y="943.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="40.8696%" y="917" width="0.8696%" height="15" fill="rgb(226,74,18)"/><text x="41.1196%" y="927.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.87%)</title><rect x="40.8696%" y="901" width="0.8696%" height="15" fill="rgb(225,67,54)"/><text x="41.1196%" y="911.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1 samples, 0.87%)</title><rect x="40.8696%" y="885" width="0.8696%" height="15" fill="rgb(251,92,32)"/><text x="41.1196%" y="895.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="40.8696%" y="869" width="0.8696%" height="15" fill="rgb(228,149,22)"/><text x="41.1196%" y="879.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="40.8696%" y="853" width="0.8696%" height="15" fill="rgb(243,54,13)"/><text x="41.1196%" y="863.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.87%)</title><rect x="40.8696%" y="837" width="0.8696%" height="15" fill="rgb(243,180,28)"/><text x="41.1196%" y="847.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.87%)</title><rect x="40.8696%" y="821" width="0.8696%" height="15" fill="rgb(208,167,24)"/><text x="41.1196%" y="831.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.87%)</title><rect x="40.8696%" y="805" width="0.8696%" height="15" fill="rgb(245,73,45)"/><text x="41.1196%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.87%)</title><rect x="40.8696%" y="789" width="0.8696%" height="15" fill="rgb(237,203,48)"/><text x="41.1196%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.87%)</title><rect x="40.8696%" y="773" width="0.8696%" height="15" fill="rgb(211,197,16)"/><text x="41.1196%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.87%)</title><rect x="40.8696%" y="757" width="0.8696%" height="15" fill="rgb(243,99,51)"/><text x="41.1196%" y="767.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.87%)</title><rect x="40.8696%" y="741" width="0.8696%" height="15" fill="rgb(215,123,29)"/><text x="41.1196%" y="751.50"></text></g><g><title>&lt;noise::noise_fns::generators::perlin::Perlin as noise::noise_fns::NoiseFieldFn&lt;noise::noisefield::NoiseField3D&gt;&gt;::process_field::_{{closure}} (1 samples, 0.87%)</title><rect x="40.8696%" y="725" width="0.8696%" height="15" fill="rgb(239,186,37)"/><text x="41.1196%" y="735.50"></text></g><g><title>noise::math::clamp (1 samples, 0.87%)</title><rect x="40.8696%" y="709" width="0.8696%" height="15" fill="rgb(252,136,39)"/><text x="41.1196%" y="719.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 1.74%)</title><rect x="40.8696%" y="1125" width="1.7391%" height="15" fill="rgb(223,213,32)"/><text x="41.1196%" y="1135.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (2 samples, 1.74%)</title><rect x="40.8696%" y="1109" width="1.7391%" height="15" fill="rgb(233,115,5)"/><text x="41.1196%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (2 samples, 1.74%)</title><rect x="40.8696%" y="1093" width="1.7391%" height="15" fill="rgb(207,226,44)"/><text x="41.1196%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 1.74%)</title><rect x="40.8696%" y="1077" width="1.7391%" height="15" fill="rgb(208,126,0)"/><text x="41.1196%" y="1087.50"></text></g><g><title>rayon_core::join::join_context (2 samples, 1.74%)</title><rect x="40.8696%" y="1061" width="1.7391%" height="15" fill="rgb(244,66,21)"/><text x="41.1196%" y="1071.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 1.74%)</title><rect x="40.8696%" y="1045" width="1.7391%" height="15" fill="rgb(222,97,12)"/><text x="41.1196%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (2 samples, 1.74%)</title><rect x="40.8696%" y="1029" width="1.7391%" height="15" fill="rgb(219,213,19)"/><text x="41.1196%" y="1039.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (1 samples, 0.87%)</title><rect x="41.7391%" y="1013" width="0.8696%" height="15" fill="rgb(252,169,30)"/><text x="41.9891%" y="1023.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.87%)</title><rect x="41.7391%" y="997" width="0.8696%" height="15" fill="rgb(206,32,51)"/><text x="41.9891%" y="1007.50"></text></g><g><title>std::panicking::try (1 samples, 0.87%)</title><rect x="41.7391%" y="981" width="0.8696%" height="15" fill="rgb(250,172,42)"/><text x="41.9891%" y="991.50"></text></g><g><title>__rust_maybe_catch_panic (1 samples, 0.87%)</title><rect x="41.7391%" y="965" width="0.8696%" height="15" fill="rgb(209,34,43)"/><text x="41.9891%" y="975.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.87%)</title><rect x="41.7391%" y="949" width="0.8696%" height="15" fill="rgb(223,11,35)"/><text x="41.9891%" y="959.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (1 samples, 0.87%)</title><rect x="41.7391%" y="933" width="0.8696%" height="15" fill="rgb(251,219,26)"/><text x="41.9891%" y="943.50"></text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (1 samples, 0.87%)</title><rect x="41.7391%" y="917" width="0.8696%" height="15" fill="rgb(231,119,3)"/><text x="41.9891%" y="927.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="41.7391%" y="901" width="0.8696%" height="15" fill="rgb(216,97,11)"/><text x="41.9891%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="41.7391%" y="885" width="0.8696%" height="15" fill="rgb(223,59,9)"/><text x="41.9891%" y="895.50"></text></g><g><title>rayon_core::join::join_context (1 samples, 0.87%)</title><rect x="41.7391%" y="869" width="0.8696%" height="15" fill="rgb(233,93,31)"/><text x="41.9891%" y="879.50"></text></g><g><title>rayon_core::registry::in_worker (1 samples, 0.87%)</title><rect x="41.7391%" y="853" width="0.8696%" height="15" fill="rgb(239,81,33)"/><text x="41.9891%" y="863.50"></text></g><g><title>rayon_core::join::join_context::_{{closure}} (1 samples, 0.87%)</title><rect x="41.7391%" y="837" width="0.8696%" height="15" fill="rgb(213,120,34)"/><text x="41.9891%" y="847.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (1 samples, 0.87%)</title><rect x="41.7391%" y="821" width="0.8696%" height="15" fill="rgb(243,49,53)"/><text x="41.9891%" y="831.50"></text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (1 samples, 0.87%)</title><rect x="41.7391%" y="805" width="0.8696%" height="15" fill="rgb(247,216,33)"/><text x="41.9891%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (1 samples, 0.87%)</title><rect x="41.7391%" y="789" width="0.8696%" height="15" fill="rgb(226,26,14)"/><text x="41.9891%" y="799.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (1 samples, 0.87%)</title><rect x="41.7391%" y="773" width="0.8696%" height="15" fill="rgb(215,49,53)"/><text x="41.9891%" y="783.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (1 samples, 0.87%)</title><rect x="41.7391%" y="757" width="0.8696%" height="15" fill="rgb(245,162,40)"/><text x="41.9891%" y="767.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (1 samples, 0.87%)</title><rect x="41.7391%" y="741" width="0.8696%" height="15" fill="rgb(229,68,17)"/><text x="41.9891%" y="751.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (1 samples, 0.87%)</title><rect x="41.7391%" y="725" width="0.8696%" height="15" fill="rgb(213,182,10)"/><text x="41.9891%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.87%)</title><rect x="41.7391%" y="709" width="0.8696%" height="15" fill="rgb(245,125,30)"/><text x="41.9891%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.87%)</title><rect x="41.7391%" y="693" width="0.8696%" height="15" fill="rgb(232,202,2)"/><text x="41.9891%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.87%)</title><rect x="41.7391%" y="677" width="0.8696%" height="15" fill="rgb(237,140,51)"/><text x="41.9891%" y="687.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.87%)</title><rect x="41.7391%" y="661" width="0.8696%" height="15" fill="rgb(236,157,25)"/><text x="41.9891%" y="671.50"></text></g><g><title>&lt;noise::noise_fns::generators::perlin::Perlin as noise::noise_fns::NoiseFieldFn&lt;noise::noisefield::NoiseField2D&gt;&gt;::process_field::_{{closure}} (1 samples, 0.87%)</title><rect x="41.7391%" y="645" width="0.8696%" height="15" fill="rgb(219,209,0)"/><text x="41.9891%" y="655.50"></text></g><g><title>noise::math::to_isize2 (1 samples, 0.87%)</title><rect x="41.7391%" y="629" width="0.8696%" height="15" fill="rgb(240,116,54)"/><text x="41.9891%" y="639.50"></text></g><g><title>&lt;noise::noise_fns::generators::perlin::Perlin as noise::noise_fns::NoiseFieldFn&lt;noise::noisefield::NoiseField2D&gt;&gt;::process_field::surflet (4 samples, 3.48%)</title><rect x="44.3478%" y="469" width="3.4783%" height="15" fill="rgb(216,10,36)"/><text x="44.5978%" y="479.50">&lt;no..</text></g><g><title>std::f64::&lt;impl f64&gt;::powi (1 samples, 0.87%)</title><rect x="46.9565%" y="453" width="0.8696%" height="15" fill="rgb(222,72,44)"/><text x="47.2065%" y="463.50"></text></g><g><title>noise::math::clamp (1 samples, 0.87%)</title><rect x="47.8261%" y="469" width="0.8696%" height="15" fill="rgb(232,159,9)"/><text x="48.0761%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 6.09%)</title><rect x="43.4783%" y="549" width="6.0870%" height="15" fill="rgb(210,39,32)"/><text x="43.7283%" y="559.50">&lt;core::i..</text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 6.09%)</title><rect x="43.4783%" y="533" width="6.0870%" height="15" fill="rgb(216,194,45)"/><text x="43.7283%" y="543.50">core::op..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (7 samples, 6.09%)</title><rect x="43.4783%" y="517" width="6.0870%" height="15" fill="rgb(218,18,35)"/><text x="43.7283%" y="527.50">core::op..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (7 samples, 6.09%)</title><rect x="43.4783%" y="501" width="6.0870%" height="15" fill="rgb(207,83,51)"/><text x="43.7283%" y="511.50">core::op..</text></g><g><title>&lt;noise::noise_fns::generators::perlin::Perlin as noise::noise_fns::NoiseFieldFn&lt;noise::noisefield::NoiseField2D&gt;&gt;::process_field::_{{closure}} (7 samples, 6.09%)</title><rect x="43.4783%" y="485" width="6.0870%" height="15" fill="rgb(225,63,43)"/><text x="43.7283%" y="495.50">&lt;noise::..</text></g><g><title>noise::math::map2 (1 samples, 0.87%)</title><rect x="48.6957%" y="469" width="0.8696%" height="15" fill="rgb(207,57,36)"/><text x="48.9457%" y="479.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.87%)</title><rect x="48.6957%" y="453" width="0.8696%" height="15" fill="rgb(216,99,33)"/><text x="48.9457%" y="463.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::floor (1 samples, 0.87%)</title><rect x="48.6957%" y="437" width="0.8696%" height="15" fill="rgb(225,42,16)"/><text x="48.9457%" y="447.50"></text></g><g><title>[libm-2.31.so] (1 samples, 0.87%)</title><rect x="48.6957%" y="421" width="0.8696%" height="15" fill="rgb(220,201,45)"/><text x="48.9457%" y="431.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (15 samples, 13.04%)</title><rect x="37.3913%" y="1765" width="13.0435%" height="15" fill="rgb(225,33,4)"/><text x="37.6413%" y="1775.50">rayon_core::registry..</text></g><g><title>rayon_core::job::JobRef::execute (15 samples, 13.04%)</title><rect x="37.3913%" y="1749" width="13.0435%" height="15" fill="rgb(224,33,50)"/><text x="37.6413%" y="1759.50">rayon_core::job::Job..</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (15 samples, 13.04%)</title><rect x="37.3913%" y="1733" width="13.0435%" height="15" fill="rgb(246,198,51)"/><text x="37.6413%" y="1743.50">&lt;rayon_core::job::St..</text></g><g><title>rayon_core::unwind::halt_unwinding (15 samples, 13.04%)</title><rect x="37.3913%" y="1717" width="13.0435%" height="15" fill="rgb(205,22,4)"/><text x="37.6413%" y="1727.50">rayon_core::unwind::..</text></g><g><title>std::panic::catch_unwind (15 samples, 13.04%)</title><rect x="37.3913%" y="1701" width="13.0435%" height="15" fill="rgb(206,3,8)"/><text x="37.6413%" y="1711.50">std::panic::catch_un..</text></g><g><title>std::panicking::try (15 samples, 13.04%)</title><rect x="37.3913%" y="1685" width="13.0435%" height="15" fill="rgb(251,23,15)"/><text x="37.6413%" y="1695.50">std::panicking::try</text></g><g><title>__rust_maybe_catch_panic (15 samples, 13.04%)</title><rect x="37.3913%" y="1669" width="13.0435%" height="15" fill="rgb(252,88,28)"/><text x="37.6413%" y="1679.50">__rust_maybe_catch_p..</text></g><g><title>std::panicking::try::do_call (15 samples, 13.04%)</title><rect x="37.3913%" y="1653" width="13.0435%" height="15" fill="rgb(212,127,14)"/><text x="37.6413%" y="1663.50">std::panicking::try:..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (15 samples, 13.04%)</title><rect x="37.3913%" y="1637" width="13.0435%" height="15" fill="rgb(247,145,37)"/><text x="37.6413%" y="1647.50">&lt;std::panic::AssertU..</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::_{{closure}} (15 samples, 13.04%)</title><rect x="37.3913%" y="1621" width="13.0435%" height="15" fill="rgb(209,117,53)"/><text x="37.6413%" y="1631.50">&lt;rayon_core::job::St..</text></g><g><title>rayon_core::join::join_context::call_b::_{{closure}} (15 samples, 13.04%)</title><rect x="37.3913%" y="1605" width="13.0435%" height="15" fill="rgb(212,90,42)"/><text x="37.6413%" y="1615.50">rayon_core::join::jo..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (15 samples, 13.04%)</title><rect x="37.3913%" y="1589" width="13.0435%" height="15" fill="rgb(218,164,37)"/><text x="37.6413%" y="1599.50">rayon::iter::plumbin..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (15 samples, 13.04%)</title><rect x="37.3913%" y="1573" width="13.0435%" height="15" fill="rgb(246,65,34)"/><text x="37.6413%" y="1583.50">rayon::iter::plumbin..</text></g><g><title>rayon_core::join::join_context (15 samples, 13.04%)</title><rect x="37.3913%" y="1557" width="13.0435%" height="15" fill="rgb(231,100,33)"/><text x="37.6413%" y="1567.50">rayon_core::join::jo..</text></g><g><title>rayon_core::registry::in_worker (15 samples, 13.04%)</title><rect x="37.3913%" y="1541" width="13.0435%" height="15" fill="rgb(228,126,14)"/><text x="37.6413%" y="1551.50">rayon_core::registry..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (15 samples, 13.04%)</title><rect x="37.3913%" y="1525" width="13.0435%" height="15" fill="rgb(215,173,21)"/><text x="37.6413%" y="1535.50">rayon_core::join::jo..</text></g><g><title>rayon_core::unwind::halt_unwinding (12 samples, 10.43%)</title><rect x="40.0000%" y="1509" width="10.4348%" height="15" fill="rgb(210,6,40)"/><text x="40.2500%" y="1519.50">rayon_core::unw..</text></g><g><title>std::panic::catch_unwind (12 samples, 10.43%)</title><rect x="40.0000%" y="1493" width="10.4348%" height="15" fill="rgb(212,48,18)"/><text x="40.2500%" y="1503.50">std::panic::cat..</text></g><g><title>std::panicking::try (12 samples, 10.43%)</title><rect x="40.0000%" y="1477" width="10.4348%" height="15" fill="rgb(230,214,11)"/><text x="40.2500%" y="1487.50">std::panicking:..</text></g><g><title>__rust_maybe_catch_panic (12 samples, 10.43%)</title><rect x="40.0000%" y="1461" width="10.4348%" height="15" fill="rgb(254,105,39)"/><text x="40.2500%" y="1471.50">__rust_maybe_ca..</text></g><g><title>std::panicking::try::do_call (12 samples, 10.43%)</title><rect x="40.0000%" y="1445" width="10.4348%" height="15" fill="rgb(245,158,5)"/><text x="40.2500%" y="1455.50">std::panicking:..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (12 samples, 10.43%)</title><rect x="40.0000%" y="1429" width="10.4348%" height="15" fill="rgb(249,208,11)"/><text x="40.2500%" y="1439.50">&lt;std::panic::As..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (12 samples, 10.43%)</title><rect x="40.0000%" y="1413" width="10.4348%" height="15" fill="rgb(210,39,28)"/><text x="40.2500%" y="1423.50">rayon_core::joi..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (12 samples, 10.43%)</title><rect x="40.0000%" y="1397" width="10.4348%" height="15" fill="rgb(211,56,53)"/><text x="40.2500%" y="1407.50">rayon::iter::pl..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 10.43%)</title><rect x="40.0000%" y="1381" width="10.4348%" height="15" fill="rgb(226,201,30)"/><text x="40.2500%" y="1391.50">rayon::iter::pl..</text></g><g><title>rayon_core::join::join_context (12 samples, 10.43%)</title><rect x="40.0000%" y="1365" width="10.4348%" height="15" fill="rgb(239,101,34)"/><text x="40.2500%" y="1375.50">rayon_core::joi..</text></g><g><title>rayon_core::registry::in_worker (12 samples, 10.43%)</title><rect x="40.0000%" y="1349" width="10.4348%" height="15" fill="rgb(226,209,5)"/><text x="40.2500%" y="1359.50">rayon_core::reg..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (12 samples, 10.43%)</title><rect x="40.0000%" y="1333" width="10.4348%" height="15" fill="rgb(250,105,47)"/><text x="40.2500%" y="1343.50">rayon_core::joi..</text></g><g><title>rayon_core::unwind::halt_unwinding (11 samples, 9.57%)</title><rect x="40.8696%" y="1317" width="9.5652%" height="15" fill="rgb(230,72,3)"/><text x="41.1196%" y="1327.50">rayon_core::un..</text></g><g><title>std::panic::catch_unwind (11 samples, 9.57%)</title><rect x="40.8696%" y="1301" width="9.5652%" height="15" fill="rgb(232,218,39)"/><text x="41.1196%" y="1311.50">std::panic::ca..</text></g><g><title>std::panicking::try (11 samples, 9.57%)</title><rect x="40.8696%" y="1285" width="9.5652%" height="15" fill="rgb(248,166,6)"/><text x="41.1196%" y="1295.50">std::panicking..</text></g><g><title>__rust_maybe_catch_panic (11 samples, 9.57%)</title><rect x="40.8696%" y="1269" width="9.5652%" height="15" fill="rgb(247,89,20)"/><text x="41.1196%" y="1279.50">__rust_maybe_c..</text></g><g><title>std::panicking::try::do_call (11 samples, 9.57%)</title><rect x="40.8696%" y="1253" width="9.5652%" height="15" fill="rgb(248,130,54)"/><text x="41.1196%" y="1263.50">std::panicking..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (11 samples, 9.57%)</title><rect x="40.8696%" y="1237" width="9.5652%" height="15" fill="rgb(234,196,4)"/><text x="41.1196%" y="1247.50">&lt;std::panic::A..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (11 samples, 9.57%)</title><rect x="40.8696%" y="1221" width="9.5652%" height="15" fill="rgb(250,143,31)"/><text x="41.1196%" y="1231.50">rayon_core::jo..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (11 samples, 9.57%)</title><rect x="40.8696%" y="1205" width="9.5652%" height="15" fill="rgb(211,110,34)"/><text x="41.1196%" y="1215.50">rayon::iter::p..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 9.57%)</title><rect x="40.8696%" y="1189" width="9.5652%" height="15" fill="rgb(215,124,48)"/><text x="41.1196%" y="1199.50">rayon::iter::p..</text></g><g><title>rayon_core::join::join_context (11 samples, 9.57%)</title><rect x="40.8696%" y="1173" width="9.5652%" height="15" fill="rgb(216,46,13)"/><text x="41.1196%" y="1183.50">rayon_core::jo..</text></g><g><title>rayon_core::registry::in_worker (11 samples, 9.57%)</title><rect x="40.8696%" y="1157" width="9.5652%" height="15" fill="rgb(205,184,25)"/><text x="41.1196%" y="1167.50">rayon_core::re..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (11 samples, 9.57%)</title><rect x="40.8696%" y="1141" width="9.5652%" height="15" fill="rgb(228,1,10)"/><text x="41.1196%" y="1151.50">rayon_core::jo..</text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 7.83%)</title><rect x="42.6087%" y="1125" width="7.8261%" height="15" fill="rgb(213,116,27)"/><text x="42.8587%" y="1135.50">rayon_core:..</text></g><g><title>std::panic::catch_unwind (9 samples, 7.83%)</title><rect x="42.6087%" y="1109" width="7.8261%" height="15" fill="rgb(241,95,50)"/><text x="42.8587%" y="1119.50">std::panic:..</text></g><g><title>std::panicking::try (9 samples, 7.83%)</title><rect x="42.6087%" y="1093" width="7.8261%" height="15" fill="rgb(238,48,32)"/><text x="42.8587%" y="1103.50">std::panick..</text></g><g><title>__rust_maybe_catch_panic (9 samples, 7.83%)</title><rect x="42.6087%" y="1077" width="7.8261%" height="15" fill="rgb(235,113,49)"/><text x="42.8587%" y="1087.50">__rust_mayb..</text></g><g><title>std::panicking::try::do_call (9 samples, 7.83%)</title><rect x="42.6087%" y="1061" width="7.8261%" height="15" fill="rgb(205,127,43)"/><text x="42.8587%" y="1071.50">std::panick..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (9 samples, 7.83%)</title><rect x="42.6087%" y="1045" width="7.8261%" height="15" fill="rgb(250,162,2)"/><text x="42.8587%" y="1055.50">&lt;std::panic..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (9 samples, 7.83%)</title><rect x="42.6087%" y="1029" width="7.8261%" height="15" fill="rgb(220,13,41)"/><text x="42.8587%" y="1039.50">rayon_core:..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (9 samples, 7.83%)</title><rect x="42.6087%" y="1013" width="7.8261%" height="15" fill="rgb(249,221,25)"/><text x="42.8587%" y="1023.50">rayon::iter..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 7.83%)</title><rect x="42.6087%" y="997" width="7.8261%" height="15" fill="rgb(215,208,19)"/><text x="42.8587%" y="1007.50">rayon::iter..</text></g><g><title>rayon_core::join::join_context (9 samples, 7.83%)</title><rect x="42.6087%" y="981" width="7.8261%" height="15" fill="rgb(236,175,2)"/><text x="42.8587%" y="991.50">rayon_core:..</text></g><g><title>rayon_core::registry::in_worker (9 samples, 7.83%)</title><rect x="42.6087%" y="965" width="7.8261%" height="15" fill="rgb(241,52,2)"/><text x="42.8587%" y="975.50">rayon_core:..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (9 samples, 7.83%)</title><rect x="42.6087%" y="949" width="7.8261%" height="15" fill="rgb(248,140,14)"/><text x="42.8587%" y="959.50">rayon_core:..</text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 7.83%)</title><rect x="42.6087%" y="933" width="7.8261%" height="15" fill="rgb(253,22,42)"/><text x="42.8587%" y="943.50">rayon_core:..</text></g><g><title>std::panic::catch_unwind (9 samples, 7.83%)</title><rect x="42.6087%" y="917" width="7.8261%" height="15" fill="rgb(234,61,47)"/><text x="42.8587%" y="927.50">std::panic:..</text></g><g><title>std::panicking::try (9 samples, 7.83%)</title><rect x="42.6087%" y="901" width="7.8261%" height="15" fill="rgb(208,226,15)"/><text x="42.8587%" y="911.50">std::panick..</text></g><g><title>__rust_maybe_catch_panic (9 samples, 7.83%)</title><rect x="42.6087%" y="885" width="7.8261%" height="15" fill="rgb(217,221,4)"/><text x="42.8587%" y="895.50">__rust_mayb..</text></g><g><title>std::panicking::try::do_call (9 samples, 7.83%)</title><rect x="42.6087%" y="869" width="7.8261%" height="15" fill="rgb(212,174,34)"/><text x="42.8587%" y="879.50">std::panick..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (9 samples, 7.83%)</title><rect x="42.6087%" y="853" width="7.8261%" height="15" fill="rgb(253,83,4)"/><text x="42.8587%" y="863.50">&lt;std::panic..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (9 samples, 7.83%)</title><rect x="42.6087%" y="837" width="7.8261%" height="15" fill="rgb(250,195,49)"/><text x="42.8587%" y="847.50">rayon_core:..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (9 samples, 7.83%)</title><rect x="42.6087%" y="821" width="7.8261%" height="15" fill="rgb(241,192,25)"/><text x="42.8587%" y="831.50">rayon::iter..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 7.83%)</title><rect x="42.6087%" y="805" width="7.8261%" height="15" fill="rgb(208,124,10)"/><text x="42.8587%" y="815.50">rayon::iter..</text></g><g><title>rayon_core::join::join_context (9 samples, 7.83%)</title><rect x="42.6087%" y="789" width="7.8261%" height="15" fill="rgb(222,33,0)"/><text x="42.8587%" y="799.50">rayon_core:..</text></g><g><title>rayon_core::registry::in_worker (9 samples, 7.83%)</title><rect x="42.6087%" y="773" width="7.8261%" height="15" fill="rgb(234,209,28)"/><text x="42.8587%" y="783.50">rayon_core:..</text></g><g><title>rayon_core::join::join_context::_{{closure}} (9 samples, 7.83%)</title><rect x="42.6087%" y="757" width="7.8261%" height="15" fill="rgb(224,11,23)"/><text x="42.8587%" y="767.50">rayon_core:..</text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 7.83%)</title><rect x="42.6087%" y="741" width="7.8261%" height="15" fill="rgb(232,99,1)"/><text x="42.8587%" y="751.50">rayon_core:..</text></g><g><title>std::panic::catch_unwind (9 samples, 7.83%)</title><rect x="42.6087%" y="725" width="7.8261%" height="15" fill="rgb(237,95,45)"/><text x="42.8587%" y="735.50">std::panic:..</text></g><g><title>std::panicking::try (9 samples, 7.83%)</title><rect x="42.6087%" y="709" width="7.8261%" height="15" fill="rgb(208,109,11)"/><text x="42.8587%" y="719.50">std::panick..</text></g><g><title>__rust_maybe_catch_panic (9 samples, 7.83%)</title><rect x="42.6087%" y="693" width="7.8261%" height="15" fill="rgb(216,190,48)"/><text x="42.8587%" y="703.50">__rust_mayb..</text></g><g><title>std::panicking::try::do_call (9 samples, 7.83%)</title><rect x="42.6087%" y="677" width="7.8261%" height="15" fill="rgb(251,171,36)"/><text x="42.8587%" y="687.50">std::panick..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (9 samples, 7.83%)</title><rect x="42.6087%" y="661" width="7.8261%" height="15" fill="rgb(230,62,22)"/><text x="42.8587%" y="671.50">&lt;std::panic..</text></g><g><title>rayon_core::join::join_context::call_a::_{{closure}} (9 samples, 7.83%)</title><rect x="42.6087%" y="645" width="7.8261%" height="15" fill="rgb(225,114,35)"/><text x="42.8587%" y="655.50">rayon_core:..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::_{{closure}} (9 samples, 7.83%)</title><rect x="42.6087%" y="629" width="7.8261%" height="15" fill="rgb(215,118,42)"/><text x="42.8587%" y="639.50">rayon::iter..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 7.83%)</title><rect x="42.6087%" y="613" width="7.8261%" height="15" fill="rgb(243,119,21)"/><text x="42.8587%" y="623.50">rayon::iter..</text></g><g><title>rayon::iter::plumbing::Producer::fold_with (9 samples, 7.83%)</title><rect x="42.6087%" y="597" width="7.8261%" height="15" fill="rgb(252,177,53)"/><text x="42.8587%" y="607.50">rayon::iter..</text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (8 samples, 6.96%)</title><rect x="43.4783%" y="581" width="6.9565%" height="15" fill="rgb(237,209,29)"/><text x="43.7283%" y="591.50">&lt;rayon::i..</text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (8 samples, 6.96%)</title><rect x="43.4783%" y="565" width="6.9565%" height="15" fill="rgb(212,65,23)"/><text x="43.7283%" y="575.50">rayon::it..</text></g><g><title>&lt;rayon::iter::collect::consumer::CollectFolder&lt;T&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume (1 samples, 0.87%)</title><rect x="49.5652%" y="549" width="0.8696%" height="15" fill="rgb(230,222,46)"/><text x="49.8152%" y="559.50"></text></g><g><title>core::ptr::write (1 samples, 0.87%)</title><rect x="49.5652%" y="533" width="0.8696%" height="15" fill="rgb(215,135,32)"/><text x="49.8152%" y="543.50"></text></g><g><title>rayon_core::registry::WorkerThread::take_local_job (1 samples, 0.87%)</title><rect x="50.4348%" y="1765" width="0.8696%" height="15" fill="rgb(246,101,22)"/><text x="50.6848%" y="1775.50"></text></g><g><title>crossbeam_deque::Worker&lt;T&gt;::pop (1 samples, 0.87%)</title><rect x="50.4348%" y="1749" width="0.8696%" height="15" fill="rgb(206,107,13)"/><text x="50.6848%" y="1759.50"></text></g><g><title>core::sync::atomic::AtomicIsize::load (1 samples, 0.87%)</title><rect x="50.4348%" y="1733" width="0.8696%" height="15" fill="rgb(250,100,44)"/><text x="50.6848%" y="1743.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.87%)</title><rect x="50.4348%" y="1717" width="0.8696%" height="15" fill="rgb(231,147,38)"/><text x="50.6848%" y="1727.50"></text></g><g><title>__GI___sched_yield (8 samples, 6.96%)</title><rect x="51.3043%" y="1749" width="6.9565%" height="15" fill="rgb(229,8,40)"/><text x="51.5543%" y="1759.50">__GI___sc..</text></g><g><title>__GI___clone (89 samples, 77.39%)</title><rect x="6.9565%" y="2085" width="77.3913%" height="15" fill="rgb(221,135,30)"/><text x="7.2065%" y="2095.50">__GI___clone</text></g><g><title>start_thread (58 samples, 50.43%)</title><rect x="33.9130%" y="2069" width="50.4348%" height="15" fill="rgb(249,193,18)"/><text x="34.1630%" y="2079.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (58 samples, 50.43%)</title><rect x="33.9130%" y="2053" width="50.4348%" height="15" fill="rgb(209,133,39)"/><text x="34.1630%" y="2063.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys_common::thread::start_thread (58 samples, 50.43%)</title><rect x="33.9130%" y="2037" width="50.4348%" height="15" fill="rgb(232,100,14)"/><text x="34.1630%" y="2047.50">std::sys_common::thread::start_thread</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (58 samples, 50.43%)</title><rect x="33.9130%" y="2021" width="50.4348%" height="15" fill="rgb(224,185,1)"/><text x="34.1630%" y="2031.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (58 samples, 50.43%)</title><rect x="33.9130%" y="2005" width="50.4348%" height="15" fill="rgb(223,139,8)"/><text x="34.1630%" y="2015.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (58 samples, 50.43%)</title><rect x="33.9130%" y="1989" width="50.4348%" height="15" fill="rgb(232,213,38)"/><text x="34.1630%" y="1999.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked::_{{closure}} (58 samples, 50.43%)</title><rect x="33.9130%" y="1973" width="50.4348%" height="15" fill="rgb(207,94,22)"/><text x="34.1630%" y="1983.50">std::thread::Builder::spawn_unchecked::_{{closure}}</text></g><g><title>std::panic::catch_unwind (58 samples, 50.43%)</title><rect x="33.9130%" y="1957" width="50.4348%" height="15" fill="rgb(219,183,54)"/><text x="34.1630%" y="1967.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (58 samples, 50.43%)</title><rect x="33.9130%" y="1941" width="50.4348%" height="15" fill="rgb(216,185,54)"/><text x="34.1630%" y="1951.50">std::panicking::try</text></g><g><title>__rust_maybe_catch_panic (58 samples, 50.43%)</title><rect x="33.9130%" y="1925" width="50.4348%" height="15" fill="rgb(254,217,39)"/><text x="34.1630%" y="1935.50">__rust_maybe_catch_panic</text></g><g><title>std::panicking::try::do_call (58 samples, 50.43%)</title><rect x="33.9130%" y="1909" width="50.4348%" height="15" fill="rgb(240,178,23)"/><text x="34.1630%" y="1919.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (58 samples, 50.43%)</title><rect x="33.9130%" y="1893" width="50.4348%" height="15" fill="rgb(218,11,47)"/><text x="34.1630%" y="1903.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;</text></g><g><title>std::thread::Builder::spawn_unchecked::_{{closure}}::_{{closure}} (58 samples, 50.43%)</title><rect x="33.9130%" y="1877" width="50.4348%" height="15" fill="rgb(218,51,51)"/><text x="34.1630%" y="1887.50">std::thread::Builder::spawn_unchecked::_{{closure}}::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (58 samples, 50.43%)</title><rect x="33.9130%" y="1861" width="50.4348%" height="15" fill="rgb(238,126,27)"/><text x="34.1630%" y="1871.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::_{{closure}} (58 samples, 50.43%)</title><rect x="33.9130%" y="1845" width="50.4348%" height="15" fill="rgb(249,202,22)"/><text x="34.1630%" y="1855.50">&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::_..</text></g><g><title>rayon_core::registry::ThreadBuilder::run (58 samples, 50.43%)</title><rect x="33.9130%" y="1829" width="50.4348%" height="15" fill="rgb(254,195,49)"/><text x="34.1630%" y="1839.50">rayon_core::registry::ThreadBuilder::run</text></g><g><title>rayon_core::registry::main_loop (58 samples, 50.43%)</title><rect x="33.9130%" y="1813" width="50.4348%" height="15" fill="rgb(208,123,14)"/><text x="34.1630%" y="1823.50">rayon_core::registry::main_loop</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (58 samples, 50.43%)</title><rect x="33.9130%" y="1797" width="50.4348%" height="15" fill="rgb(224,200,8)"/><text x="34.1630%" y="1807.50">rayon_core::registry::WorkerThread::wait_until</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (58 samples, 50.43%)</title><rect x="33.9130%" y="1781" width="50.4348%" height="15" fill="rgb(217,61,36)"/><text x="34.1630%" y="1791.50">rayon_core::registry::WorkerThread::wait_until_cold</text></g><g><title>rayon_core::sleep::Sleep::no_work_found (38 samples, 33.04%)</title><rect x="51.3043%" y="1765" width="33.0435%" height="15" fill="rgb(206,35,45)"/><text x="51.5543%" y="1775.50">rayon_core::sleep::Sleep::no_work_found</text></g><g><title>rayon_core::sleep::Sleep::sleep (30 samples, 26.09%)</title><rect x="58.2609%" y="1749" width="26.0870%" height="15" fill="rgb(217,65,33)"/><text x="58.5109%" y="1759.50">rayon_core::sleep::Sleep::sleep</text></g><g><title>std::sync::condvar::Condvar::wait (30 samples, 26.09%)</title><rect x="58.2609%" y="1733" width="26.0870%" height="15" fill="rgb(222,158,48)"/><text x="58.5109%" y="1743.50">std::sync::condvar::Condvar::wait</text></g><g><title>std::sys_common::condvar::Condvar::wait (30 samples, 26.09%)</title><rect x="58.2609%" y="1717" width="26.0870%" height="15" fill="rgb(254,2,54)"/><text x="58.5109%" y="1727.50">std::sys_common::condvar::Condvar::wait</text></g><g><title>std::sys::unix::condvar::Condvar::wait (30 samples, 26.09%)</title><rect x="58.2609%" y="1701" width="26.0870%" height="15" fill="rgb(250,143,38)"/><text x="58.5109%" y="1711.50">std::sys::unix::condvar::Condvar::wait</text></g><g><title>__pthread_cond_wait (30 samples, 26.09%)</title><rect x="58.2609%" y="1685" width="26.0870%" height="15" fill="rgb(248,25,0)"/><text x="58.5109%" y="1695.50">__pthread_cond_wait</text></g><g><title>_start (5 samples, 4.35%)</title><rect x="84.3478%" y="2085" width="4.3478%" height="15" fill="rgb(206,152,27)"/><text x="84.5978%" y="2095.50">_start</text></g><g><title>_dl_start (1 samples, 0.87%)</title><rect x="87.8261%" y="2069" width="0.8696%" height="15" fill="rgb(240,77,30)"/><text x="88.0761%" y="2079.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.87%)</title><rect x="87.8261%" y="2053" width="0.8696%" height="15" fill="rgb(231,5,3)"/><text x="88.0761%" y="2063.50"></text></g><g><title>dl_main (1 samples, 0.87%)</title><rect x="87.8261%" y="2037" width="0.8696%" height="15" fill="rgb(207,226,32)"/><text x="88.0761%" y="2047.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.87%)</title><rect x="87.8261%" y="2021" width="0.8696%" height="15" fill="rgb(222,207,47)"/><text x="88.0761%" y="2031.50"></text></g><g><title>&lt;noise::noisefield::NoiseField2D as core::clone::Clone&gt;::clone (1 samples, 0.87%)</title><rect x="90.4348%" y="1877" width="0.8696%" height="15" fill="rgb(229,115,45)"/><text x="90.6848%" y="1887.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.87%)</title><rect x="90.4348%" y="1861" width="0.8696%" height="15" fill="rgb(224,191,6)"/><text x="90.6848%" y="1871.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.87%)</title><rect x="90.4348%" y="1845" width="0.8696%" height="15" fill="rgb(230,227,24)"/><text x="90.6848%" y="1855.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.87%)</title><rect x="90.4348%" y="1829" width="0.8696%" height="15" fill="rgb(228,80,19)"/><text x="90.6848%" y="1839.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.87%)</title><rect x="90.4348%" y="1813" width="0.8696%" height="15" fill="rgb(247,229,0)"/><text x="90.6848%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.87%)</title><rect x="90.4348%" y="1797" width="0.8696%" height="15" fill="rgb(237,194,15)"/><text x="90.6848%" y="1807.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.87%)</title><rect x="90.4348%" y="1781" width="0.8696%" height="15" fill="rgb(219,203,20)"/><text x="90.6848%" y="1791.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.87%)</title><rect x="90.4348%" y="1765" width="0.8696%" height="15" fill="rgb(234,128,8)"/><text x="90.6848%" y="1775.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.87%)</title><rect x="90.4348%" y="1749" width="0.8696%" height="15" fill="rgb(248,202,8)"/><text x="90.6848%" y="1759.50"></text></g><g><title>&lt;noise::noise_fns::generators::perlin::Perlin as noise::noise_fns::NoiseFieldFn&lt;noise::noisefield::NoiseField2D&gt;&gt;::process_field (5 samples, 4.35%)</title><rect x="90.4348%" y="1893" width="4.3478%" height="15" fill="rgb(206,104,37)"/><text x="90.6848%" y="1903.50">&lt;nois..</text></g><g><title>rayon::iter::ParallelIterator::collect (4 samples, 3.48%)</title><rect x="91.3043%" y="1877" width="3.4783%" height="15" fill="rgb(223,8,27)"/><text x="91.5543%" y="1887.50">ray..</text></g><g><title>rayon::iter::from_par_iter::&lt;impl rayon::iter::FromParallelIterator&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_par_iter (4 samples, 3.48%)</title><rect x="91.3043%" y="1861" width="3.4783%" height="15" fill="rgb(216,217,28)"/><text x="91.5543%" y="1871.50">ray..</text></g><g><title>rayon::iter::from_par_iter::collect_extended (4 samples, 3.48%)</title><rect x="91.3043%" y="1845" width="3.4783%" height="15" fill="rgb(249,199,1)"/><text x="91.5543%" y="1855.50">ray..</text></g><g><title>rayon::iter::collect::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend (4 samples, 3.48%)</title><rect x="91.3043%" y="1829" width="3.4783%" height="15" fill="rgb(240,85,17)"/><text x="91.5543%" y="1839.50">ray..</text></g><g><title>rayon::iter::collect::special_extend (4 samples, 3.48%)</title><rect x="91.3043%" y="1813" width="3.4783%" height="15" fill="rgb(206,108,45)"/><text x="91.5543%" y="1823.50">ray..</text></g><g><title>&lt;rayon::iter::map::Map&lt;I,F&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (4 samples, 3.48%)</title><rect x="91.3043%" y="1797" width="3.4783%" height="15" fill="rgb(245,210,41)"/><text x="91.5543%" y="1807.50">&lt;ra..</text></g><g><title>&lt;rayon::slice::Iter&lt;T&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (4 samples, 3.48%)</title><rect x="91.3043%" y="1781" width="3.4783%" height="15" fill="rgb(206,13,37)"/><text x="91.5543%" y="1791.50">&lt;ra..</text></g><g><title>rayon::iter::plumbing::bridge (4 samples, 3.48%)</title><rect x="91.3043%" y="1765" width="3.4783%" height="15" fill="rgb(250,61,18)"/><text x="91.5543%" y="1775.50">ray..</text></g><g><title>&lt;rayon::slice::Iter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (4 samples, 3.48%)</title><rect x="91.3043%" y="1749" width="3.4783%" height="15" fill="rgb(235,172,48)"/><text x="91.5543%" y="1759.50">&lt;ra..</text></g><g><title>&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (4 samples, 3.48%)</title><rect x="91.3043%" y="1733" width="3.4783%" height="15" fill="rgb(249,201,17)"/><text x="91.5543%" y="1743.50">&lt;ra..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (4 samples, 3.48%)</title><rect x="91.3043%" y="1717" width="3.4783%" height="15" fill="rgb(219,208,6)"/><text x="91.5543%" y="1727.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 3.48%)</title><rect x="91.3043%" y="1701" width="3.4783%" height="15" fill="rgb(248,31,23)"/><text x="91.5543%" y="1711.50">ray..</text></g><g><title>rayon_core::join::join_context (4 samples, 3.48%)</title><rect x="91.3043%" y="1685" width="3.4783%" height="15" fill="rgb(245,15,42)"/><text x="91.5543%" y="1695.50">ray..</text></g><g><title>rayon_core::registry::in_worker (4 samples, 3.48%)</title><rect x="91.3043%" y="1669" width="3.4783%" height="15" fill="rgb(222,217,39)"/><text x="91.5543%" y="1679.50">ray..</text></g><g><title>rayon_core::registry::Registry::in_worker_cold (4 samples, 3.48%)</title><rect x="91.3043%" y="1653" width="3.4783%" height="15" fill="rgb(210,219,27)"/><text x="91.5543%" y="1663.50">ray..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 3.48%)</title><rect x="91.3043%" y="1637" width="3.4783%" height="15" fill="rgb(252,166,36)"/><text x="91.5543%" y="1647.50">std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 3.48%)</title><rect x="91.3043%" y="1621" width="3.4783%" height="15" fill="rgb(245,132,34)"/><text x="91.5543%" y="1631.50">std..</text></g><g><title>rayon_core::registry::Registry::in_worker_cold::_{{closure}} (4 samples, 3.48%)</title><rect x="91.3043%" y="1605" width="3.4783%" height="15" fill="rgb(236,54,3)"/><text x="91.5543%" y="1615.50">ray..</text></g><g><title>rayon_core::sleep::Sleep::tickle_cold (4 samples, 3.48%)</title><rect x="91.3043%" y="1589" width="3.4783%" height="15" fill="rgb(241,173,43)"/><text x="91.5543%" y="1599.50">ray..</text></g><g><title>core::ptr::drop_in_place (4 samples, 3.48%)</title><rect x="91.3043%" y="1573" width="3.4783%" height="15" fill="rgb(215,190,9)"/><text x="91.5543%" y="1583.50">cor..</text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 3.48%)</title><rect x="91.3043%" y="1557" width="3.4783%" height="15" fill="rgb(242,101,16)"/><text x="91.5543%" y="1567.50">&lt;st..</text></g><g><title>std::sys_common::mutex::Mutex::raw_unlock (4 samples, 3.48%)</title><rect x="91.3043%" y="1541" width="3.4783%" height="15" fill="rgb(223,190,21)"/><text x="91.5543%" y="1551.50">std..</text></g><g><title>std::sys::unix::mutex::Mutex::unlock (4 samples, 3.48%)</title><rect x="91.3043%" y="1525" width="3.4783%" height="15" fill="rgb(215,228,25)"/><text x="91.5543%" y="1535.50">std..</text></g><g><title>__pthread_mutex_unlock_usercnt (4 samples, 3.48%)</title><rect x="91.3043%" y="1509" width="3.4783%" height="15" fill="rgb(225,36,22)"/><text x="91.5543%" y="1519.50">__p..</text></g><g><title>&lt;noise::utils::noise_map_builder::PlaneMapBuilder as noise::utils::noise_map_builder::NoiseMapBuilder&lt;noise::noisefield::NoiseField2D&gt;&gt;::build (8 samples, 6.96%)</title><rect x="88.6957%" y="1909" width="6.9565%" height="15" fill="rgb(251,106,46)"/><text x="88.9457%" y="1919.50">&lt;noise::u..</text></g><g><title>noise::utils::noise_map::NoiseMap::set_value (1 samples, 0.87%)</title><rect x="94.7826%" y="1893" width="0.8696%" height="15" fill="rgb(208,90,1)"/><text x="95.0326%" y="1903.50"></text></g><g><title>&lt;noise::noise_fns::generators::perlin::Perlin as noise::noise_fns::NoiseFieldFn&lt;noise::noisefield::NoiseField3D&gt;&gt;::process_field (1 samples, 0.87%)</title><rect x="96.5217%" y="1893" width="0.8696%" height="15" fill="rgb(243,10,4)"/><text x="96.7717%" y="1903.50"></text></g><g><title>&lt;noise::noisefield::NoiseField3D as core::clone::Clone&gt;::clone (1 samples, 0.87%)</title><rect x="96.5217%" y="1877" width="0.8696%" height="15" fill="rgb(212,137,27)"/><text x="96.7717%" y="1887.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.87%)</title><rect x="96.5217%" y="1861" width="0.8696%" height="15" fill="rgb(231,220,49)"/><text x="96.7717%" y="1871.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.87%)</title><rect x="96.5217%" y="1845" width="0.8696%" height="15" fill="rgb(237,96,20)"/><text x="96.7717%" y="1855.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.87%)</title><rect x="96.5217%" y="1829" width="0.8696%" height="15" fill="rgb(239,229,30)"/><text x="96.7717%" y="1839.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (1 samples, 0.87%)</title><rect x="96.5217%" y="1813" width="0.8696%" height="15" fill="rgb(219,65,33)"/><text x="96.7717%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.87%)</title><rect x="96.5217%" y="1797" width="0.8696%" height="15" fill="rgb(243,134,7)"/><text x="96.7717%" y="1807.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.87%)</title><rect x="96.5217%" y="1781" width="0.8696%" height="15" fill="rgb(216,177,54)"/><text x="96.7717%" y="1791.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.87%)</title><rect x="96.5217%" y="1765" width="0.8696%" height="15" fill="rgb(211,160,20)"/><text x="96.7717%" y="1775.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.87%)</title><rect x="96.5217%" y="1749" width="0.8696%" height="15" fill="rgb(239,85,39)"/><text x="96.7717%" y="1759.50"></text></g><g><title>&lt;noise::utils::noise_map_builder::SphereMapBuilder as noise::utils::noise_map_builder::NoiseMapBuilder&lt;noise::noisefield::NoiseField3D&gt;&gt;::build (3 samples, 2.61%)</title><rect x="95.6522%" y="1909" width="2.6087%" height="15" fill="rgb(232,125,22)"/><text x="95.9022%" y="1919.50">&lt;n..</text></g><g><title>noise::utils::noise_map_builder::lat_lon_to_xyz (1 samples, 0.87%)</title><rect x="97.3913%" y="1893" width="0.8696%" height="15" fill="rgb(244,57,34)"/><text x="97.6413%" y="1903.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sin (1 samples, 0.87%)</title><rect x="97.3913%" y="1877" width="0.8696%" height="15" fill="rgb(214,203,32)"/><text x="97.6413%" y="1887.50"></text></g><g><title>sincosf32x (1 samples, 0.87%)</title><rect x="97.3913%" y="1861" width="0.8696%" height="15" fill="rgb(207,58,43)"/><text x="97.6413%" y="1871.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.87%)</title><rect x="98.2609%" y="1813" width="0.8696%" height="15" fill="rgb(215,193,15)"/><text x="98.5109%" y="1823.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.87%)</title><rect x="98.2609%" y="1797" width="0.8696%" height="15" fill="rgb(232,15,44)"/><text x="98.5109%" y="1807.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.87%)</title><rect x="98.2609%" y="1781" width="0.8696%" height="15" fill="rgb(212,3,48)"/><text x="98.5109%" y="1791.50"></text></g><g><title>all (115 samples, 100%)</title><rect x="0.0000%" y="2117" width="100.0000%" height="15" fill="rgb(218,128,7)"/><text x="0.2500%" y="2127.50"></text></g><g><title>perlin (115 samples, 100.00%)</title><rect x="0.0000%" y="2101" width="100.0000%" height="15" fill="rgb(226,216,39)"/><text x="0.2500%" y="2111.50">perlin</text></g><g><title>inflate::InflateStream::next_state (13 samples, 11.30%)</title><rect x="88.6957%" y="2085" width="11.3043%" height="15" fill="rgb(243,47,51)"/><text x="88.9457%" y="2095.50">inflate::InflateS..</text></g><g><title>__libc_start_main (13 samples, 11.30%)</title><rect x="88.6957%" y="2069" width="11.3043%" height="15" fill="rgb(241,183,40)"/><text x="88.9457%" y="2079.50">__libc_start_main</text></g><g><title>inflate::InflateStream::next_state (13 samples, 11.30%)</title><rect x="88.6957%" y="2053" width="11.3043%" height="15" fill="rgb(231,217,32)"/><text x="88.9457%" y="2063.50">inflate::InflateS..</text></g><g><title>std::rt::lang_start_internal (13 samples, 11.30%)</title><rect x="88.6957%" y="2037" width="11.3043%" height="15" fill="rgb(229,61,38)"/><text x="88.9457%" y="2047.50">std::rt::lang_sta..</text></g><g><title>std::panic::catch_unwind (13 samples, 11.30%)</title><rect x="88.6957%" y="2021" width="11.3043%" height="15" fill="rgb(225,210,5)"/><text x="88.9457%" y="2031.50">std::panic::catch..</text></g><g><title>std::panicking::try (13 samples, 11.30%)</title><rect x="88.6957%" y="2005" width="11.3043%" height="15" fill="rgb(231,79,45)"/><text x="88.9457%" y="2015.50">std::panicking::t..</text></g><g><title>__rust_maybe_catch_panic (13 samples, 11.30%)</title><rect x="88.6957%" y="1989" width="11.3043%" height="15" fill="rgb(224,100,7)"/><text x="88.9457%" y="1999.50">__rust_maybe_catc..</text></g><g><title>std::panicking::try::do_call (13 samples, 11.30%)</title><rect x="88.6957%" y="1973" width="11.3043%" height="15" fill="rgb(241,198,18)"/><text x="88.9457%" y="1983.50">std::panicking::t..</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (13 samples, 11.30%)</title><rect x="88.6957%" y="1957" width="11.3043%" height="15" fill="rgb(252,97,53)"/><text x="88.9457%" y="1967.50">std::rt::lang_sta..</text></g><g><title>std::rt::lang_start::_{{closure}} (13 samples, 11.30%)</title><rect x="88.6957%" y="1941" width="11.3043%" height="15" fill="rgb(220,88,7)"/><text x="88.9457%" y="1951.50">std::rt::lang_sta..</text></g><g><title>perlin::main (13 samples, 11.30%)</title><rect x="88.6957%" y="1925" width="11.3043%" height="15" fill="rgb(213,176,14)"/><text x="88.9457%" y="1935.50">perlin::main</text></g><g><title>noise::utils::noise_map::NoiseMap::write_to_file (2 samples, 1.74%)</title><rect x="98.2609%" y="1909" width="1.7391%" height="15" fill="rgb(246,73,7)"/><text x="98.5109%" y="1919.50"></text></g><g><title>image::dynimage::save_buffer (2 samples, 1.74%)</title><rect x="98.2609%" y="1893" width="1.7391%" height="15" fill="rgb(245,64,36)"/><text x="98.5109%" y="1903.50"></text></g><g><title>image::io::free_functions::save_buffer_impl (2 samples, 1.74%)</title><rect x="98.2609%" y="1877" width="1.7391%" height="15" fill="rgb(245,80,10)"/><text x="98.5109%" y="1887.50"></text></g><g><title>&lt;image::png::PNGEncoder&lt;W&gt; as image::image::ImageEncoder&gt;::write_image (2 samples, 1.74%)</title><rect x="98.2609%" y="1861" width="1.7391%" height="15" fill="rgb(232,107,50)"/><text x="98.5109%" y="1871.50"></text></g><g><title>image::png::PNGEncoder&lt;W&gt;::encode (2 samples, 1.74%)</title><rect x="98.2609%" y="1845" width="1.7391%" height="15" fill="rgb(253,3,0)"/><text x="98.5109%" y="1855.50"></text></g><g><title>png::encoder::Writer&lt;W&gt;::write_image_data (2 samples, 1.74%)</title><rect x="98.2609%" y="1829" width="1.7391%" height="15" fill="rgb(212,99,53)"/><text x="98.5109%" y="1839.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.87%)</title><rect x="99.1304%" y="1813" width="0.8696%" height="15" fill="rgb(249,111,54)"/><text x="99.3804%" y="1823.50"></text></g><g><title>&lt;deflate::writer::ZlibEncoder&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.87%)</title><rect x="99.1304%" y="1797" width="0.8696%" height="15" fill="rgb(249,55,30)"/><text x="99.3804%" y="1807.50"></text></g><g><title>deflate::compress::compress_data_dynamic_n (1 samples, 0.87%)</title><rect x="99.1304%" y="1781" width="0.8696%" height="15" fill="rgb(237,47,42)"/><text x="99.3804%" y="1791.50"></text></g><g><title>deflate::lz77::lz77_compress_block (1 samples, 0.87%)</title><rect x="99.1304%" y="1765" width="0.8696%" height="15" fill="rgb(211,20,18)"/><text x="99.3804%" y="1775.50"></text></g><g><title>deflate::lz77::process_chunk (1 samples, 0.87%)</title><rect x="99.1304%" y="1749" width="0.8696%" height="15" fill="rgb(231,203,46)"/><text x="99.3804%" y="1759.50"></text></g><g><title>deflate::lz77::process_chunk_greedy (1 samples, 0.87%)</title><rect x="99.1304%" y="1733" width="0.8696%" height="15" fill="rgb(237,142,3)"/><text x="99.3804%" y="1743.50"></text></g><g><title>deflate::lz77::add_to_hash_table (1 samples, 0.87%)</title><rect x="99.1304%" y="1717" width="0.8696%" height="15" fill="rgb(241,107,1)"/><text x="99.3804%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.87%)</title><rect x="99.1304%" y="1701" width="0.8696%" height="15" fill="rgb(229,83,13)"/><text x="99.3804%" y="1711.50"></text></g></svg></svg>